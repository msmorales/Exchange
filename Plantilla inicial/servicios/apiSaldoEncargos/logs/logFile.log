<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
  <head>
    <title>Logback Log Messages</title>
<style  type="text/css">
table { margin-left: 2em; margin-right: 2em; border-left: 2px solid #AAA; }
TR.even { background: #FFFFFF; }
TR.odd { background: #EAEAEA; }
TR.warn TD.Level, TR.error TD.Level, TR.fatal TD.Level {font-weight: bold; color: #FF4040 }
TD { padding-right: 1ex; padding-left: 1ex; border-right: 2px solid #AAA; }
TD.Time, TD.Date { text-align: right; font-family: courier, monospace; font-size: smaller; }
TD.Thread { text-align: left; }
TD.Level { text-align: right; }
TD.Logger { text-align: left; }
TR.header { background: #596ED5; color: #FFF; font-weight: bold; font-size: larger; }
TD.Exception { background: #A2AEE8; font-family: courier, monospace;}
</style>

  </head>
<body>
<hr/>
<p>Log session start time Tue Oct 29 15:05:23 COT 2019</p><p></p>

<table cellspacing="0">
<tr class="header">
<td class="Date">Date</td>
<td class="Thread">Thread</td>
<td class="Level">Level</td>
<td class="Logger">Logger</td>
<td class="LineOfCaller">LineOfCaller</td>
<td class="Message">Message</td>
</tr>


<tr class="warn even">
<td class="Date">15:05:23.885</td>
<td class="Thread">main</td>
<td class="Level">WARN</td>
<td class="Logger">io.fabric8.kubernetes.client.Config</td>
<td class="LineOfCaller">347</td>
<td class="Message">Error reading service account token from: [/var/run/secrets/kubernetes.io/serviceaccount/token]. Ignoring.</td>
</tr>
</table>
</body></html><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
  <head>
    <title>Logback Log Messages</title>
<style  type="text/css">
table { margin-left: 2em; margin-right: 2em; border-left: 2px solid #AAA; }
TR.even { background: #FFFFFF; }
TR.odd { background: #EAEAEA; }
TR.warn TD.Level, TR.error TD.Level, TR.fatal TD.Level {font-weight: bold; color: #FF4040 }
TD { padding-right: 1ex; padding-left: 1ex; border-right: 2px solid #AAA; }
TD.Time, TD.Date { text-align: right; font-family: courier, monospace; font-size: smaller; }
TD.Thread { text-align: left; }
TD.Level { text-align: right; }
TD.Logger { text-align: left; }
TR.header { background: #596ED5; color: #FFF; font-weight: bold; font-size: larger; }
TD.Exception { background: #A2AEE8; font-family: courier, monospace;}
</style>

  </head>
<body>
<hr/>
<p>Log session start time Tue Oct 29 15:05:27 COT 2019</p><p></p>

<table cellspacing="0">
<tr class="header">
<td class="Date">Date</td>
<td class="Thread">Thread</td>
<td class="Level">Level</td>
<td class="Logger">Logger</td>
<td class="LineOfCaller">LineOfCaller</td>
<td class="Message">Message</td>
</tr>


<tr class="info even">
<td class="Date">15:05:29.067</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.context.annotation.AnnotationConfigApplicationContext</td>
<td class="LineOfCaller">583</td>
<td class="Message">Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@7146fa42: startup date [Tue Oct 29 15:05:29 COT 2019]; root of context hierarchy</td>
</tr>

<tr class="info odd">
<td class="Date">15:05:29.576</td>
<td class="Thread">background-preinit</td>
<td class="Level">INFO</td>
<td class="Logger">org.hibernate.validator.internal.util.Version</td>
<td class="LineOfCaller">30</td>
<td class="Message">HV000001: Hibernate Validator 5.3.5.Final</td>
</tr>

<tr class="info even">
<td class="Date">15:05:31.084</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker</td>
<td class="LineOfCaller">325</td>
<td class="Message">Bean &#39;configurationPropertiesRebinderAutoConfiguration&#39; of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$8596ada6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)</td>
</tr>

<tr class="warn odd">
<td class="Date">15:05:32.379</td>
<td class="Thread">main</td>
<td class="Level">WARN</td>
<td class="Logger">io.fabric8.kubernetes.client.Config</td>
<td class="LineOfCaller">347</td>
<td class="Message">Error reading service account token from: [/var/run/secrets/kubernetes.io/serviceaccount/token]. Ignoring.</td>
</tr>

<tr class="warn even">
<td class="Date">15:05:32.387</td>
<td class="Thread">main</td>
<td class="Level">WARN</td>
<td class="Logger">io.fabric8.spring.cloud.kubernetes.KubernetesClientProperties</td>
<td class="LineOfCaller">70</td>
<td class="Message">No namespace has been detected. Please specify KUBERNETES_NAMESPACE env var, or use a later kubernetes version (1.3 or later)</td>
</tr>
</table>
</body></html><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
  <head>
    <title>Logback Log Messages</title>
<style  type="text/css">
table { margin-left: 2em; margin-right: 2em; border-left: 2px solid #AAA; }
TR.even { background: #FFFFFF; }
TR.odd { background: #EAEAEA; }
TR.warn TD.Level, TR.error TD.Level, TR.fatal TD.Level {font-weight: bold; color: #FF4040 }
TD { padding-right: 1ex; padding-left: 1ex; border-right: 2px solid #AAA; }
TD.Time, TD.Date { text-align: right; font-family: courier, monospace; font-size: smaller; }
TD.Thread { text-align: left; }
TD.Level { text-align: right; }
TD.Logger { text-align: left; }
TR.header { background: #596ED5; color: #FFF; font-weight: bold; font-size: larger; }
TD.Exception { background: #A2AEE8; font-family: courier, monospace;}
</style>

  </head>
<body>
<hr/>
<p>Log session start time Tue Oct 29 15:05:33 COT 2019</p><p></p>

<table cellspacing="0">
<tr class="header">
<td class="Date">Date</td>
<td class="Thread">Thread</td>
<td class="Level">Level</td>
<td class="Logger">Logger</td>
<td class="LineOfCaller">LineOfCaller</td>
<td class="Message">Message</td>
</tr>


<tr class="warn even">
<td class="Date">15:05:34.309</td>
<td class="Thread">main</td>
<td class="Level">WARN</td>
<td class="Logger">io.fabric8.spring.cloud.kubernetes.config.ConfigMapPropertySource</td>
<td class="LineOfCaller">84</td>
<td class="Message">Can&#39;t read configMap with name: [saldoencargos] in namespace:[null]. Ignoring</td>
</tr>

<tr class="info odd">
<td class="Date">15:05:34.349</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration</td>
<td class="LineOfCaller">93</td>
<td class="Message">Located property source: ConfigMapPropertySource [name=&#39;configmap.saldoencargos.null&#39;]</td>
</tr>

<tr class="info even">
<td class="Date">15:05:34.361</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration</td>
<td class="LineOfCaller">93</td>
<td class="Message">Located property source: SecretsPropertySource [name=&#39;secrets.saldoencargos.null&#39;]</td>
</tr>
</table>
</body></html><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
  <head>
    <title>Logback Log Messages</title>
<style  type="text/css">
table { margin-left: 2em; margin-right: 2em; border-left: 2px solid #AAA; }
TR.even { background: #FFFFFF; }
TR.odd { background: #EAEAEA; }
TR.warn TD.Level, TR.error TD.Level, TR.fatal TD.Level {font-weight: bold; color: #FF4040 }
TD { padding-right: 1ex; padding-left: 1ex; border-right: 2px solid #AAA; }
TD.Time, TD.Date { text-align: right; font-family: courier, monospace; font-size: smaller; }
TD.Thread { text-align: left; }
TD.Level { text-align: right; }
TD.Logger { text-align: left; }
TR.header { background: #596ED5; color: #FFF; font-weight: bold; font-size: larger; }
TD.Exception { background: #A2AEE8; font-family: courier, monospace;}
</style>

  </head>
<body>
<hr/>
<p>Log session start time Tue Oct 29 15:05:34 COT 2019</p><p></p>

<table cellspacing="0">
<tr class="header">
<td class="Date">Date</td>
<td class="Thread">Thread</td>
<td class="Level">Level</td>
<td class="Logger">Logger</td>
<td class="LineOfCaller">LineOfCaller</td>
<td class="Message">Message</td>
</tr>


<tr class="info even">
<td class="Date">15:05:34.408</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">co.com.entelgy.Application</td>
<td class="LineOfCaller">593</td>
<td class="Message">No active profile set, falling back to default profiles: default</td>
</tr>

<tr class="info odd">
<td class="Date">15:05:34.502</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext</td>
<td class="LineOfCaller">583</td>
<td class="Message">Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@576c0488: startup date [Tue Oct 29 15:05:34 COT 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@7146fa42</td>
</tr>

<tr class="info even">
<td class="Date">15:05:38.779</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.beans.factory.xml.XmlBeanDefinitionReader</td>
<td class="LineOfCaller">317</td>
<td class="Message">Loading XML bean definitions from class path resource [spring/camel-context.xml]</td>
</tr>

<tr class="info odd">
<td class="Date">15:05:43.993</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader</td>
<td class="LineOfCaller">300</td>
<td class="Message">Skipping bean definition for [BeanMethod:name=properties,declaringClass=org.apache.camel.spring.boot.CamelAutoConfiguration]: a definition for bean &#39;properties&#39; already exists. This top-level bean definition is considered as an override.</td>
</tr>

<tr class="info even">
<td class="Date">15:05:44.556</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.beans.factory.xml.XmlBeanDefinitionReader</td>
<td class="LineOfCaller">317</td>
<td class="Message">Loading XML bean definitions from class path resource [META-INF/cxf/cxf.xml]</td>
</tr>

<tr class="warn odd">
<td class="Date">15:05:46.137</td>
<td class="Thread">main</td>
<td class="Level">WARN</td>
<td class="Logger">org.springframework.context.annotation.ConfigurationClassPostProcessor</td>
<td class="LineOfCaller">373</td>
<td class="Message">Cannot enhance @Configuration bean definition &#39;refreshScope&#39; since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as &#39;static&#39;.</td>
</tr>

<tr class="info even">
<td class="Date">15:05:47.337</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.cloud.context.scope.GenericScope</td>
<td class="LineOfCaller">263</td>
<td class="Message">BeanFactory id=a1f7f09c-a0fc-3282-be21-d3abd014496f</td>
</tr>

<tr class="info odd">
<td class="Date">15:05:48.468</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker</td>
<td class="LineOfCaller">325</td>
<td class="Message">Bean &#39;org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration&#39; of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$697caaa9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)</td>
</tr>

<tr class="info even">
<td class="Date">15:05:48.756</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker</td>
<td class="LineOfCaller">325</td>
<td class="Message">Bean &#39;org.apache.camel.spring.boot.CamelAutoConfiguration&#39; of type [org.apache.camel.spring.boot.CamelAutoConfiguration$$EnhancerBySpringCGLIB$$8ba670c8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)</td>
</tr>

<tr class="info odd">
<td class="Date">15:05:48.856</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker</td>
<td class="LineOfCaller">325</td>
<td class="Message">Bean &#39;org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration&#39; of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$8596ada6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)</td>
</tr>

<tr class="info even">
<td class="Date">15:05:51.495</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.xnio</td>
<td class="LineOfCaller">99</td>
<td class="Message">XNIO version 3.3.6.Final</td>
</tr>

<tr class="info odd">
<td class="Date">15:05:51.589</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.xnio.nio</td>
<td class="LineOfCaller">55</td>
<td class="Message">XNIO NIO Implementation Version 3.3.6.Final</td>
</tr>

<tr class="warn even">
<td class="Date">15:05:52.064</td>
<td class="Thread">main</td>
<td class="Level">WARN</td>
<td class="Logger">io.undertow.websockets.jsr</td>
<td class="LineOfCaller">67</td>
<td class="Message">UT026009: XNIO worker was not set on WebSocketDeploymentInfo, the default worker will be used</td>
</tr>

<tr class="warn odd">
<td class="Date">15:05:52.064</td>
<td class="Thread">main</td>
<td class="Level">WARN</td>
<td class="Logger">io.undertow.websockets.jsr</td>
<td class="LineOfCaller">76</td>
<td class="Message">UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used</td>
</tr>

<tr class="info even">
<td class="Date">15:05:52.247</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">io.undertow.servlet</td>
<td class="LineOfCaller">360</td>
<td class="Message">Initializing Spring embedded WebApplicationContext</td>
</tr>

<tr class="info odd">
<td class="Date">15:05:52.247</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.web.context.ContextLoader</td>
<td class="LineOfCaller">276</td>
<td class="Message">Root WebApplicationContext: initialization completed in 17745 ms</td>
</tr>

<tr class="warn even">
<td class="Date">15:05:52.838</td>
<td class="Thread">main</td>
<td class="Level">WARN</td>
<td class="Logger">org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor</td>
<td class="LineOfCaller">427</td>
<td class="Message">The @ConfigurationProperties bean class org.apache.cxf.spring.boot.autoconfigure.CxfProperties contains validation constraints but had not been annotated with @Validated.</td>
</tr>

<tr class="warn odd">
<td class="Date">15:05:52.845</td>
<td class="Thread">main</td>
<td class="Level">WARN</td>
<td class="Logger">org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor</td>
<td class="LineOfCaller">427</td>
<td class="Message">The @ConfigurationProperties bean class org.apache.cxf.spring.boot.autoconfigure.CxfProperties contains validation constraints but had not been annotated with @Validated.</td>
</tr>

<tr class="warn even">
<td class="Date">15:05:52.858</td>
<td class="Thread">main</td>
<td class="Level">WARN</td>
<td class="Logger">org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor</td>
<td class="LineOfCaller">427</td>
<td class="Message">The @ConfigurationProperties bean class org.apache.cxf.spring.boot.autoconfigure.CxfProperties contains validation constraints but had not been annotated with @Validated.</td>
</tr>

<tr class="info odd">
<td class="Date">15:05:54.465</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.boot.web.servlet.ServletRegistrationBean</td>
<td class="LineOfCaller">190</td>
<td class="Message">Mapping servlet: &#39;dispatcherServlet&#39; to [/]</td>
</tr>

<tr class="info even">
<td class="Date">15:05:54.575</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.boot.web.servlet.ServletRegistrationBean</td>
<td class="LineOfCaller">190</td>
<td class="Message">Mapping servlet: &#39;CXFServlet&#39; to [/fxf/*]</td>
</tr>

<tr class="info odd">
<td class="Date">15:05:54.591</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.boot.web.servlet.FilterRegistrationBean</td>
<td class="LineOfCaller">258</td>
<td class="Message">Mapping filter: &#39;metricsFilter&#39; to: [/*]</td>
</tr>

<tr class="info even">
<td class="Date">15:05:54.622</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.boot.web.servlet.FilterRegistrationBean</td>
<td class="LineOfCaller">258</td>
<td class="Message">Mapping filter: &#39;characterEncodingFilter&#39; to: [/*]</td>
</tr>

<tr class="info odd">
<td class="Date">15:05:54.622</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.boot.web.servlet.FilterRegistrationBean</td>
<td class="LineOfCaller">258</td>
<td class="Message">Mapping filter: &#39;hiddenHttpMethodFilter&#39; to: [/*]</td>
</tr>

<tr class="info even">
<td class="Date">15:05:54.622</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.boot.web.servlet.FilterRegistrationBean</td>
<td class="LineOfCaller">258</td>
<td class="Message">Mapping filter: &#39;httpPutFormContentFilter&#39; to: [/*]</td>
</tr>

<tr class="info odd">
<td class="Date">15:05:54.653</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.boot.web.servlet.FilterRegistrationBean</td>
<td class="LineOfCaller">258</td>
<td class="Message">Mapping filter: &#39;requestContextFilter&#39; to: [/*]</td>
</tr>

<tr class="info even">
<td class="Date">15:05:54.653</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.boot.web.servlet.FilterRegistrationBean</td>
<td class="LineOfCaller">258</td>
<td class="Message">Mapping filter: &#39;webRequestLoggingFilter&#39; to: [/*]</td>
</tr>

<tr class="info odd">
<td class="Date">15:05:54.653</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.boot.web.servlet.FilterRegistrationBean</td>
<td class="LineOfCaller">258</td>
<td class="Message">Mapping filter: &#39;applicationContextIdFilter&#39; to: [/*]</td>
</tr>

<tr class="info even">
<td class="Date">15:05:58.089</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.apache.camel.core.xml.AbstractCamelContextFactoryBean</td>
<td class="LineOfCaller">931</td>
<td class="Message">Using custom default ThreadPoolProfile with id: changedProfile and implementation: org.apache.camel.model.ThreadPoolProfileDefinition@3e3c7fb6</td>
</tr>

<tr class="info odd">
<td class="Date">15:05:58.527</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.apache.camel.impl.converter.DefaultTypeConverter</td>
<td class="LineOfCaller">56</td>
<td class="Message">Loaded 221 type converters</td>
</tr>

<tr class="info even">
<td class="Date">15:05:58.527</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.apache.camel.impl.DefaultExecutorServiceManager</td>
<td class="LineOfCaller">119</td>
<td class="Message">Using custom DefaultThreadPoolProfile: ThreadPoolProfile[changedProfile (true) size:1-20, keepAlive: 60 SECONDS, maxQueue: 100, allowCoreThreadTimeOut:false, rejectedPolicy:CallerRuns]</td>
</tr>

<tr class="info odd">
<td class="Date">15:06:01.917</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter</td>
<td class="LineOfCaller">534</td>
<td class="Message">Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@576c0488: startup date [Tue Oct 29 15:05:34 COT 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@7146fa42</td>
</tr>

<tr class="info even">
<td class="Date">15:06:02.464</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping</td>
<td class="LineOfCaller">543</td>
<td class="Message">Mapped &quot;{[/error]}&quot; onto public org.springframework.http.ResponseEntity&lt;java.util.Map&lt;java.lang.String, java.lang.Object&gt;&gt; org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)</td>
</tr>

<tr class="info odd">
<td class="Date">15:06:02.470</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping</td>
<td class="LineOfCaller">543</td>
<td class="Message">Mapped &quot;{[/error],produces=[text/html]}&quot; onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)</td>
</tr>

<tr class="info even">
<td class="Date">15:06:02.838</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.web.servlet.handler.SimpleUrlHandlerMapping</td>
<td class="LineOfCaller">362</td>
<td class="Message">Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]</td>
</tr>

<tr class="info odd">
<td class="Date">15:06:02.840</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.web.servlet.handler.SimpleUrlHandlerMapping</td>
<td class="LineOfCaller">362</td>
<td class="Message">Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]</td>
</tr>

<tr class="info even">
<td class="Date">15:06:03.294</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.web.servlet.handler.SimpleUrlHandlerMapping</td>
<td class="LineOfCaller">362</td>
<td class="Message">Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]</td>
</tr>

<tr class="warn odd">
<td class="Date">15:06:03.896</td>
<td class="Thread">OkHttp https://kubernetes.default.svc/...</td>
<td class="Level">WARN</td>
<td class="Logger">io.fabric8.kubernetes.client.dsl.internal.WatchConnectionManager</td>
<td class="LineOfCaller">192</td>
<td class="Message">Exec Failure</td>
</tr>
<tr><td class="Exception" colspan="6">java.net.UnknownHostException: kubernetes.default.svc
<br />&nbsp;&nbsp;&nbsp;&nbsp;at java.net.Inet6AddressImpl.lookupAllHostAddr(Native Method)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at java.net.InetAddress$2.lookupAllHostAddr(InetAddress.java:929)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1324)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at java.net.InetAddress.getAllByName0(InetAddress.java:1277)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at java.net.InetAddress.getAllByName(InetAddress.java:1193)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at java.net.InetAddress.getAllByName(InetAddress.java:1127)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at okhttp3.Dns$1.lookup(Dns.java:39)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at okhttp3.internal.connection.RouteSelector.resetNextInetSocketAddress(RouteSelector.java:171)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at okhttp3.internal.connection.RouteSelector.nextProxy(RouteSelector.java:137)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at okhttp3.internal.connection.RouteSelector.next(RouteSelector.java:82)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at okhttp3.internal.connection.StreamAllocation.findConnection(StreamAllocation.java:171)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at okhttp3.internal.connection.StreamAllocation.findHealthyConnection(StreamAllocation.java:121)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at okhttp3.internal.connection.StreamAllocation.newStream(StreamAllocation.java:100)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.java:42)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:92)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:67)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.java:93)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:92)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:67)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.java:93)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:92)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:120)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:92)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:67)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at io.fabric8.kubernetes.client.utils.HttpClientUtils$2.intercept(HttpClientUtils.java:95)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:92)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:67)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:185)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at okhttp3.RealCall$AsyncCall.execute(RealCall.java:135)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at okhttp3.internal.NamedRunnable.run(NamedRunnable.java:32)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at java.lang.Thread.run(Thread.java:748)
</td></tr>
<tr class="error even">
<td class="Date">15:06:03.911</td>
<td class="Thread">main</td>
<td class="Level">ERROR</td>
<td class="Logger">io.fabric8.spring.cloud.kubernetes.reload.EventBasedConfigurationChangeDetector</td>
<td class="LineOfCaller">83</td>
<td class="Message">Error while establishing a connection to watch config maps: configuration may remain stale</td>
</tr>
<tr><td class="Exception" colspan="6">io.fabric8.kubernetes.client.KubernetesClientException: Failed to start websocket
<br />&nbsp;&nbsp;&nbsp;&nbsp;at io.fabric8.kubernetes.client.dsl.internal.WatchConnectionManager$2.onFailure(WatchConnectionManager.java:194)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at okhttp3.internal.ws.RealWebSocket.failWebSocket(RealWebSocket.java:543)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at okhttp3.internal.ws.RealWebSocket$2.onFailure(RealWebSocket.java:208)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at okhttp3.RealCall$AsyncCall.execute(RealCall.java:148)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at okhttp3.internal.NamedRunnable.run(NamedRunnable.java:32)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at java.lang.Thread.run(Thread.java:748)
<br />Caused by: java.net.UnknownHostException: kubernetes.default.svc
<br />&nbsp;&nbsp;&nbsp;&nbsp;at java.net.Inet6AddressImpl.lookupAllHostAddr(Native Method)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at java.net.InetAddress$2.lookupAllHostAddr(InetAddress.java:929)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1324)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at java.net.InetAddress.getAllByName0(InetAddress.java:1277)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at java.net.InetAddress.getAllByName(InetAddress.java:1193)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at java.net.InetAddress.getAllByName(InetAddress.java:1127)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at okhttp3.Dns$1.lookup(Dns.java:39)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at okhttp3.internal.connection.RouteSelector.resetNextInetSocketAddress(RouteSelector.java:171)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at okhttp3.internal.connection.RouteSelector.nextProxy(RouteSelector.java:137)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at okhttp3.internal.connection.RouteSelector.next(RouteSelector.java:82)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at okhttp3.internal.connection.StreamAllocation.findConnection(StreamAllocation.java:171)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at okhttp3.internal.connection.StreamAllocation.findHealthyConnection(StreamAllocation.java:121)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at okhttp3.internal.connection.StreamAllocation.newStream(StreamAllocation.java:100)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.java:42)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:92)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:67)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.java:93)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:92)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:67)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.java:93)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:92)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:120)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:92)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:67)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at io.fabric8.kubernetes.client.utils.HttpClientUtils$2.intercept(HttpClientUtils.java:95)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:92)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:67)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:185)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at okhttp3.RealCall$AsyncCall.execute(RealCall.java:135)
<br />&nbsp;&nbsp;&nbsp;&nbsp;	... 4 common frames omitted
</td></tr>
<tr class="info odd">
<td class="Date">15:06:09.893</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping</td>
<td class="LineOfCaller">543</td>
<td class="Message">Mapped &quot;{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}&quot; onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)</td>
</tr>

<tr class="info even">
<td class="Date">15:06:09.913</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping</td>
<td class="LineOfCaller">543</td>
<td class="Message">Mapped &quot;{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}&quot; onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()</td>
</tr>

<tr class="info odd">
<td class="Date">15:06:09.926</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping</td>
<td class="LineOfCaller">543</td>
<td class="Message">Mapped &quot;{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}&quot; onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()</td>
</tr>

<tr class="info even">
<td class="Date">15:06:09.931</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping</td>
<td class="LineOfCaller">543</td>
<td class="Message">Mapped &quot;{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}&quot; onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)</td>
</tr>

<tr class="info odd">
<td class="Date">15:06:09.962</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping</td>
<td class="LineOfCaller">543</td>
<td class="Message">Mapped &quot;{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}&quot; onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()</td>
</tr>

<tr class="info even">
<td class="Date">15:06:09.962</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping</td>
<td class="LineOfCaller">543</td>
<td class="Message">Mapped &quot;{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}&quot; onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()</td>
</tr>

<tr class="info odd">
<td class="Date">15:06:09.993</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping</td>
<td class="LineOfCaller">543</td>
<td class="Message">Mapped &quot;{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}&quot; onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)</td>
</tr>

<tr class="info even">
<td class="Date">15:06:09.993</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping</td>
<td class="LineOfCaller">543</td>
<td class="Message">Mapped &quot;{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}&quot; onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map&lt;java.lang.String, java.lang.String&gt;)</td>
</tr>

<tr class="info odd">
<td class="Date">15:06:10.024</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping</td>
<td class="LineOfCaller">543</td>
<td class="Message">Mapped &quot;{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}&quot; onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()</td>
</tr>

<tr class="info even">
<td class="Date">15:06:10.078</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping</td>
<td class="LineOfCaller">543</td>
<td class="Message">Mapped &quot;{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}&quot; onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()</td>
</tr>

<tr class="info odd">
<td class="Date">15:06:10.087</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping</td>
<td class="LineOfCaller">543</td>
<td class="Message">Mapped &quot;{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}&quot; onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()</td>
</tr>

<tr class="info even">
<td class="Date">15:06:10.096</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping</td>
<td class="LineOfCaller">543</td>
<td class="Message">Mapped &quot;{[/resume || /resume.json],methods=[POST]}&quot; onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()</td>
</tr>

<tr class="info odd">
<td class="Date">15:06:10.103</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping</td>
<td class="LineOfCaller">543</td>
<td class="Message">Mapped &quot;{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}&quot; onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()</td>
</tr>

<tr class="info even">
<td class="Date">15:06:10.133</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping</td>
<td class="LineOfCaller">543</td>
<td class="Message">Mapped &quot;{[/env],methods=[POST]}&quot; onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map&lt;java.lang.String, java.lang.String&gt;)</td>
</tr>

<tr class="info odd">
<td class="Date">15:06:10.136</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping</td>
<td class="LineOfCaller">543</td>
<td class="Message">Mapped &quot;{[/env/reset],methods=[POST]}&quot; onto public java.util.Map&lt;java.lang.String, java.lang.Object&gt; org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()</td>
</tr>

<tr class="info even">
<td class="Date">15:06:10.176</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping</td>
<td class="LineOfCaller">543</td>
<td class="Message">Mapped &quot;{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}&quot; onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException</td>
</tr>

<tr class="info odd">
<td class="Date">15:06:10.207</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping</td>
<td class="LineOfCaller">543</td>
<td class="Message">Mapped &quot;{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}&quot; onto public org.springframework.http.ResponseEntity&lt;?&gt; org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)</td>
</tr>

<tr class="info even">
<td class="Date">15:06:10.207</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping</td>
<td class="LineOfCaller">543</td>
<td class="Message">Mapped &quot;{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}&quot; onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()</td>
</tr>

<tr class="info odd">
<td class="Date">15:06:10.207</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping</td>
<td class="LineOfCaller">543</td>
<td class="Message">Mapped &quot;{[/refresh || /refresh.json],methods=[POST]}&quot; onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()</td>
</tr>

<tr class="info even">
<td class="Date">15:06:10.207</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping</td>
<td class="LineOfCaller">543</td>
<td class="Message">Mapped &quot;{[/restart || /restart.json],methods=[POST]}&quot; onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()</td>
</tr>

<tr class="info odd">
<td class="Date">15:06:10.223</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping</td>
<td class="LineOfCaller">543</td>
<td class="Message">Mapped &quot;{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}&quot; onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)</td>
</tr>

<tr class="info even">
<td class="Date">15:06:10.239</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping</td>
<td class="LineOfCaller">543</td>
<td class="Message">Mapped &quot;{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}&quot; onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()</td>
</tr>

<tr class="info odd">
<td class="Date">15:06:10.239</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping</td>
<td class="LineOfCaller">543</td>
<td class="Message">Mapped &quot;{[/pause || /pause.json],methods=[POST]}&quot; onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()</td>
</tr>

<tr class="info even">
<td class="Date">15:06:12.357</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.jmx.export.annotation.AnnotationMBeanExporter</td>
<td class="LineOfCaller">431</td>
<td class="Message">Registering beans for JMX exposure on startup</td>
</tr>

<tr class="info odd">
<td class="Date">15:06:12.415</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.jmx.export.annotation.AnnotationMBeanExporter</td>
<td class="LineOfCaller">916</td>
<td class="Message">Bean with name &#39;configurationPropertiesRebinder&#39; has been autodetected for JMX exposure</td>
</tr>

<tr class="info even">
<td class="Date">15:06:12.423</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.jmx.export.annotation.AnnotationMBeanExporter</td>
<td class="LineOfCaller">916</td>
<td class="Message">Bean with name &#39;refreshEndpoint&#39; has been autodetected for JMX exposure</td>
</tr>

<tr class="info odd">
<td class="Date">15:06:12.426</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.jmx.export.annotation.AnnotationMBeanExporter</td>
<td class="LineOfCaller">916</td>
<td class="Message">Bean with name &#39;restartEndpoint&#39; has been autodetected for JMX exposure</td>
</tr>

<tr class="info even">
<td class="Date">15:06:12.429</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.jmx.export.annotation.AnnotationMBeanExporter</td>
<td class="LineOfCaller">916</td>
<td class="Message">Bean with name &#39;refreshScope&#39; has been autodetected for JMX exposure</td>
</tr>

<tr class="info odd">
<td class="Date">15:06:12.432</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.jmx.export.annotation.AnnotationMBeanExporter</td>
<td class="LineOfCaller">916</td>
<td class="Message">Bean with name &#39;environmentManager&#39; has been autodetected for JMX exposure</td>
</tr>

<tr class="info even">
<td class="Date">15:06:12.441</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.jmx.export.annotation.AnnotationMBeanExporter</td>
<td class="LineOfCaller">678</td>
<td class="Message">Located managed bean &#39;environmentManager&#39;: registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]</td>
</tr>

<tr class="info odd">
<td class="Date">15:06:12.566</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.jmx.export.annotation.AnnotationMBeanExporter</td>
<td class="LineOfCaller">678</td>
<td class="Message">Located managed bean &#39;restartEndpoint&#39;: registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]</td>
</tr>

<tr class="info even">
<td class="Date">15:06:12.613</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.jmx.export.annotation.AnnotationMBeanExporter</td>
<td class="LineOfCaller">678</td>
<td class="Message">Located managed bean &#39;refreshScope&#39;: registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]</td>
</tr>

<tr class="info odd">
<td class="Date">15:06:12.722</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.jmx.export.annotation.AnnotationMBeanExporter</td>
<td class="LineOfCaller">678</td>
<td class="Message">Located managed bean &#39;configurationPropertiesRebinder&#39;: registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=576c0488,type=ConfigurationPropertiesRebinder]</td>
</tr>

<tr class="info even">
<td class="Date">15:06:12.769</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.jmx.export.annotation.AnnotationMBeanExporter</td>
<td class="LineOfCaller">678</td>
<td class="Message">Located managed bean &#39;refreshEndpoint&#39;: registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]</td>
</tr>

<tr class="info odd">
<td class="Date">15:06:12.769</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter</td>
<td class="LineOfCaller">431</td>
<td class="Message">Registering beans for JMX exposure on startup</td>
</tr>

<tr class="warn even">
<td class="Date">15:06:13.771</td>
<td class="Thread">main</td>
<td class="Level">WARN</td>
<td class="Logger">org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor</td>
<td class="LineOfCaller">427</td>
<td class="Message">The @ConfigurationProperties bean class org.apache.cxf.spring.boot.autoconfigure.CxfProperties contains validation constraints but had not been annotated with @Validated.</td>
</tr>

<tr class="warn odd">
<td class="Date">15:06:13.774</td>
<td class="Thread">main</td>
<td class="Level">WARN</td>
<td class="Logger">org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor</td>
<td class="LineOfCaller">427</td>
<td class="Message">The @ConfigurationProperties bean class org.apache.cxf.spring.boot.autoconfigure.CxfProperties contains validation constraints but had not been annotated with @Validated.</td>
</tr>

<tr class="warn even">
<td class="Date">15:06:13.784</td>
<td class="Thread">main</td>
<td class="Level">WARN</td>
<td class="Logger">org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor</td>
<td class="LineOfCaller">427</td>
<td class="Message">The @ConfigurationProperties bean class org.apache.cxf.spring.boot.autoconfigure.CxfProperties contains validation constraints but had not been annotated with @Validated.</td>
</tr>

<tr class="warn odd">
<td class="Date">15:06:13.790</td>
<td class="Thread">main</td>
<td class="Level">WARN</td>
<td class="Logger">org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor</td>
<td class="LineOfCaller">427</td>
<td class="Message">The @ConfigurationProperties bean class org.apache.cxf.spring.boot.autoconfigure.CxfProperties contains validation constraints but had not been annotated with @Validated.</td>
</tr>

<tr class="warn even">
<td class="Date">15:06:13.791</td>
<td class="Thread">main</td>
<td class="Level">WARN</td>
<td class="Logger">org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor</td>
<td class="LineOfCaller">427</td>
<td class="Message">The @ConfigurationProperties bean class org.apache.cxf.spring.boot.autoconfigure.CxfProperties contains validation constraints but had not been annotated with @Validated.</td>
</tr>

<tr class="warn odd">
<td class="Date">15:06:13.794</td>
<td class="Thread">main</td>
<td class="Level">WARN</td>
<td class="Logger">org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor</td>
<td class="LineOfCaller">427</td>
<td class="Message">The @ConfigurationProperties bean class org.apache.cxf.spring.boot.autoconfigure.CxfProperties contains validation constraints but had not been annotated with @Validated.</td>
</tr>

<tr class="info even">
<td class="Date">15:06:15.017</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.context.support.DefaultLifecycleProcessor</td>
<td class="LineOfCaller">343</td>
<td class="Message">Starting beans in phase 0</td>
</tr>

<tr class="info odd">
<td class="Date">15:06:15.031</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter</td>
<td class="LineOfCaller">678</td>
<td class="Message">Located managed bean &#39;auditEventsEndpoint&#39;: registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]</td>
</tr>

<tr class="info even">
<td class="Date">15:06:15.063</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter</td>
<td class="LineOfCaller">678</td>
<td class="Message">Located managed bean &#39;requestMappingEndpoint&#39;: registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]</td>
</tr>

<tr class="info odd">
<td class="Date">15:06:15.094</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter</td>
<td class="LineOfCaller">678</td>
<td class="Message">Located managed bean &#39;environmentEndpoint&#39;: registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]</td>
</tr>

<tr class="info even">
<td class="Date">15:06:15.141</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter</td>
<td class="LineOfCaller">678</td>
<td class="Message">Located managed bean &#39;healthEndpoint&#39;: registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]</td>
</tr>

<tr class="info odd">
<td class="Date">15:06:15.156</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter</td>
<td class="LineOfCaller">678</td>
<td class="Message">Located managed bean &#39;beansEndpoint&#39;: registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]</td>
</tr>

<tr class="info even">
<td class="Date">15:06:15.313</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter</td>
<td class="LineOfCaller">678</td>
<td class="Message">Located managed bean &#39;infoEndpoint&#39;: registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]</td>
</tr>

<tr class="info odd">
<td class="Date">15:06:15.331</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter</td>
<td class="LineOfCaller">678</td>
<td class="Message">Located managed bean &#39;loggersEndpoint&#39;: registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]</td>
</tr>

<tr class="info even">
<td class="Date">15:06:15.354</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter</td>
<td class="LineOfCaller">678</td>
<td class="Message">Located managed bean &#39;metricsEndpoint&#39;: registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]</td>
</tr>

<tr class="info odd">
<td class="Date">15:06:15.370</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter</td>
<td class="LineOfCaller">678</td>
<td class="Message">Located managed bean &#39;traceEndpoint&#39;: registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]</td>
</tr>

<tr class="info even">
<td class="Date">15:06:15.386</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter</td>
<td class="LineOfCaller">678</td>
<td class="Message">Located managed bean &#39;dumpEndpoint&#39;: registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]</td>
</tr>

<tr class="info odd">
<td class="Date">15:06:15.415</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter</td>
<td class="LineOfCaller">678</td>
<td class="Message">Located managed bean &#39;autoConfigurationReportEndpoint&#39;: registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]</td>
</tr>

<tr class="info even">
<td class="Date">15:06:15.438</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter</td>
<td class="LineOfCaller">678</td>
<td class="Message">Located managed bean &#39;configurationPropertiesReportEndpoint&#39;: registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]</td>
</tr>

<tr class="info odd">
<td class="Date">15:06:15.447</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.context.support.DefaultLifecycleProcessor</td>
<td class="LineOfCaller">343</td>
<td class="Message">Starting beans in phase 2147483647</td>
</tr>

<tr class="info even">
<td class="Date">15:06:15.720</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.apache.camel.spring.boot.RoutesCollector</td>
<td class="LineOfCaller">210</td>
<td class="Message">Loading additional Camel XML routes from: classpath:camel/*.xml</td>
</tr>

<tr class="info odd">
<td class="Date">15:06:15.720</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.apache.camel.spring.boot.RoutesCollector</td>
<td class="LineOfCaller">224</td>
<td class="Message">Loading additional Camel XML rests from: classpath:camel-rest/*.xml</td>
</tr>

<tr class="info even">
<td class="Date">15:06:15.736</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.apache.camel.spring.boot.RoutesCollector</td>
<td class="LineOfCaller">142</td>
<td class="Message">Starting CamelMainRunController to ensure the main thread keeps running</td>
</tr>

<tr class="info odd">
<td class="Date">15:06:15.736</td>
<td class="Thread">CamelMainRunController</td>
<td class="Level">INFO</td>
<td class="Logger">org.apache.camel.spring.SpringCamelContext</td>
<td class="LineOfCaller">3007</td>
<td class="Message">Apache Camel 2.19.1 (CamelContext: CXF-SERVICE-SALDOPAGOS-API) is starting</td>
</tr>

<tr class="info even">
<td class="Date">15:06:15.751</td>
<td class="Thread">CamelMainRunController</td>
<td class="Level">INFO</td>
<td class="Logger">org.apache.camel.spring.SpringCamelContext</td>
<td class="LineOfCaller">3147</td>
<td class="Message">StreamCaching is enabled on CamelContext: CXF-SERVICE-SALDOPAGOS-API</td>
</tr>

<tr class="info odd">
<td class="Date">15:06:15.751</td>
<td class="Thread">CamelMainRunController</td>
<td class="Level">INFO</td>
<td class="Logger">org.apache.camel.management.ManagedManagementStrategy</td>
<td class="LineOfCaller">192</td>
<td class="Message">JMX is enabled</td>
</tr>

<tr class="info even">
<td class="Date">15:06:16.078</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer</td>
<td class="LineOfCaller">160</td>
<td class="Message">Undertow started on port(s) 8080 (http)</td>
</tr>

<tr class="info odd">
<td class="Date">15:06:16.109</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">co.com.entelgy.Application</td>
<td class="LineOfCaller">57</td>
<td class="Message">Started Application in 49.947 seconds (JVM running for 94.482)</td>
</tr>

<tr class="info even">
<td class="Date">15:06:16.596</td>
<td class="Thread">CamelMainRunController</td>
<td class="Level">INFO</td>
<td class="Logger">org.apache.camel.impl.DefaultRuntimeEndpointRegistry</td>
<td class="LineOfCaller">203</td>
<td class="Message">Runtime endpoint registry is in extended mode gathering usage statistics of all incoming and outgoing endpoints (cache limit: 1000)</td>
</tr>

<tr class="info odd">
<td class="Date">15:06:19.206</td>
<td class="Thread">CamelMainRunController</td>
<td class="Level">INFO</td>
<td class="Logger">org.apache.camel.component.http4.HttpComponent</td>
<td class="LineOfCaller">371</td>
<td class="Message">Created ClientConnectionManager org.apache.http.impl.conn.PoolingHttpClientConnectionManager@4f7140b5</td>
</tr>

<tr class="info even">
<td class="Date">15:06:20.431</td>
<td class="Thread">CamelMainRunController</td>
<td class="Level">INFO</td>
<td class="Logger">org.apache.camel.impl.DefaultStreamCachingStrategy</td>
<td class="LineOfCaller">316</td>
<td class="Message">StreamCaching in use with spool directory: C:\Users\maico\AppData\Local\Temp\camel\camel-tmp-2c3f7a58-7ce2-4cd3-9420-c97f76de15be and rules: [Spool &gt; 128K body size]</td>
</tr>

<tr class="info odd">
<td class="Date">15:06:20.997</td>
<td class="Thread">CamelMainRunController</td>
<td class="Level">INFO</td>
<td class="Logger">org.apache.cxf.endpoint.ServerImpl</td>
<td class="LineOfCaller">85</td>
<td class="Message">Setting the server&#39;s publish address to be /saldoEncargos</td>
</tr>

<tr class="info even">
<td class="Date">15:06:22.521</td>
<td class="Thread">CamelMainRunController</td>
<td class="Level">INFO</td>
<td class="Logger">org.apache.camel.spring.SpringCamelContext</td>
<td class="LineOfCaller">3836</td>
<td class="Message">Route: SALDOENCARGOS-ROUTE-MAIN started and consuming from: cxfrs://bean:restApiEnpoint?bindingStyle=SimpleConsumer</td>
</tr>

<tr class="info odd">
<td class="Date">15:06:23.815</td>
<td class="Thread">CamelMainRunController</td>
<td class="Level">INFO</td>
<td class="Logger">org.apache.camel.spring.SpringCamelContext</td>
<td class="LineOfCaller">3836</td>
<td class="Message">Route: JMS-ROUTE-MAIN started and consuming from: jms://valSaldoEncargoJMS</td>
</tr>

<tr class="info even">
<td class="Date">15:06:23.861</td>
<td class="Thread">CamelMainRunController</td>
<td class="Level">INFO</td>
<td class="Logger">org.apache.camel.spring.SpringCamelContext</td>
<td class="LineOfCaller">3836</td>
<td class="Message">Route: CONSULTA-DATOS started and consuming from: direct://validacionSaldo</td>
</tr>

<tr class="info odd">
<td class="Date">15:06:23.869</td>
<td class="Thread">CamelMainRunController</td>
<td class="Level">INFO</td>
<td class="Logger">org.apache.camel.spring.SpringCamelContext</td>
<td class="LineOfCaller">3836</td>
<td class="Message">Route: RT-RESPUESTA-VALIDAR-SALDO started and consuming from: direct://responseValidaSaldo</td>
</tr>

<tr class="info even">
<td class="Date">15:06:23.889</td>
<td class="Thread">CamelMainRunController</td>
<td class="Level">INFO</td>
<td class="Logger">org.apache.camel.spring.SpringCamelContext</td>
<td class="LineOfCaller">3050</td>
<td class="Message">Total 4 routes, of which 4 are started.</td>
</tr>

<tr class="info odd">
<td class="Date">15:06:23.896</td>
<td class="Thread">CamelMainRunController</td>
<td class="Level">INFO</td>
<td class="Logger">org.apache.camel.spring.SpringCamelContext</td>
<td class="LineOfCaller">3051</td>
<td class="Message">Apache Camel 2.19.1 (CamelContext: CXF-SERVICE-SALDOPAGOS-API) started in 8.153 seconds</td>
</tr>

<tr class="error even">
<td class="Date">15:15:42.959</td>
<td class="Thread">XNIO-2 task-1</td>
<td class="Level">ERROR</td>
<td class="Logger">org.apache.cxf.jaxrs.utils.JAXRSUtils</td>
<td class="LineOfCaller">1793</td>
<td class="Message">No message body reader has been found for class co.com.entelgy.model.RequestRest, ContentType: application/octet-stream</td>
</tr>

<tr class="warn odd">
<td class="Date">15:15:43.043</td>
<td class="Thread">XNIO-2 task-1</td>
<td class="Level">WARN</td>
<td class="Logger">org.apache.cxf.jaxrs.impl.WebApplicationExceptionMapper</td>
<td class="LineOfCaller">72</td>
<td class="Message">javax.ws.rs.WebApplicationException: HTTP 415 Unsupported Media Type
	at org.apache.cxf.jaxrs.utils.JAXRSUtils.readFromMessageBody(JAXRSUtils.java:1321)
	at org.apache.cxf.jaxrs.utils.JAXRSUtils.processParameter(JAXRSUtils.java:825)
	at org.apache.cxf.jaxrs.utils.JAXRSUtils.processParameters(JAXRSUtils.java:789)
	at org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor.processRequest(JAXRSInInterceptor.java:212)
	at org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor.handleMessage(JAXRSInInterceptor.java:77)
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:308)
	at org.apache.cxf.transport.ChainInitiationObserver.onMessage(ChainInitiationObserver.java:121)
	at org.apache.cxf.transport.http.AbstractHTTPDestination.invoke(AbstractHTTPDestination.java:262)
	at org.apache.cxf.transport.servlet.ServletController.invokeDestination(ServletController.java:234)
	at org.apache.cxf.transport.servlet.ServletController.invoke(ServletController.java:208)
	at org.apache.cxf.transport.servlet.ServletController.invoke(ServletController.java:160)
	at org.apache.cxf.transport.servlet.CXFNonSpringServlet.invoke(CXFNonSpringServlet.java:180)
	at org.apache.cxf.transport.servlet.AbstractHTTPServlet.handleRequest(AbstractHTTPServlet.java:299)
	at org.apache.cxf.transport.servlet.AbstractHTTPServlet.doPost(AbstractHTTPServlet.java:218)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:707)
	at org.apache.cxf.transport.servlet.AbstractHTTPServlet.service(AbstractHTTPServlet.java:274)
	at io.undertow.servlet.handlers.ServletHandler.handleRequest(ServletHandler.java:85)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:129)
	at org.springframework.boot.web.filter.ApplicationContextHeaderFilter.doFilterInternal(ApplicationContextHeaderFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.boot.actuate.trace.WebRequestTraceFilter.doFilterInternal(WebRequestTraceFilter.java:110)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.boot.actuate.autoconfigure.MetricsFilter.doFilterInternal(MetricsFilter.java:106)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at io.undertow.servlet.handlers.FilterHandler.handleRequest(FilterHandler.java:84)
	at io.undertow.servlet.handlers.security.ServletSecurityRoleHandler.handleRequest(ServletSecurityRoleHandler.java:62)
	at io.undertow.servlet.handlers.ServletDispatchingHandler.handleRequest(ServletDispatchingHandler.java:36)
	at io.undertow.servlet.handlers.security.SSLInformationAssociationHandler.handleRequest(SSLInformationAssociationHandler.java:131)
	at io.undertow.servlet.handlers.security.ServletAuthenticationCallHandler.handleRequest(ServletAuthenticationCallHandler.java:57)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.security.handlers.AbstractConfidentialityHandler.handleRequest(AbstractConfidentialityHandler.java:46)
	at io.undertow.servlet.handlers.security.ServletConfidentialityConstraintHandler.handleRequest(ServletConfidentialityConstraintHandler.java:64)
	at io.undertow.security.handlers.AuthenticationMechanismsHandler.handleRequest(AuthenticationMechanismsHandler.java:60)
	at io.undertow.servlet.handlers.security.CachedAuthenticatedSessionHandler.handleRequest(CachedAuthenticatedSessionHandler.java:77)
	at io.undertow.security.handlers.AbstractSecurityContextAssociationHandler.handleRequest(AbstractSecurityContextAssociationHandler.java:43)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.servlet.handlers.ServletInitialHandler.handleFirstRequest(ServletInitialHandler.java:292)
	at io.undertow.servlet.handlers.ServletInitialHandler.access$100(ServletInitialHandler.java:81)
	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:138)
	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:135)
	at io.undertow.servlet.core.ServletRequestContextThreadSetupAction$1.call(ServletRequestContextThreadSetupAction.java:48)
	at io.undertow.servlet.core.ContextClassLoaderSetupAction$1.call(ContextClassLoaderSetupAction.java:43)
	at io.undertow.servlet.handlers.ServletInitialHandler.dispatchRequest(ServletInitialHandler.java:272)
	at io.undertow.servlet.handlers.ServletInitialHandler.access$000(ServletInitialHandler.java:81)
	at io.undertow.servlet.handlers.ServletInitialHandler$1.handleRequest(ServletInitialHandler.java:104)
	at io.undertow.server.Connectors.executeRootHandler(Connectors.java:211)
	at io.undertow.server.HttpServerExchange$1.run(HttpServerExchange.java:809)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
</td>
</tr>

<tr class="error even">
<td class="Date">15:16:09.990</td>
<td class="Thread">XNIO-2 task-2</td>
<td class="Level">ERROR</td>
<td class="Logger">org.apache.cxf.jaxrs.utils.JAXRSUtils</td>
<td class="LineOfCaller">1793</td>
<td class="Message">No message body reader has been found for class co.com.entelgy.model.RequestRest, ContentType: application/octet-stream</td>
</tr>

<tr class="warn odd">
<td class="Date">15:16:09.993</td>
<td class="Thread">XNIO-2 task-2</td>
<td class="Level">WARN</td>
<td class="Logger">org.apache.cxf.jaxrs.impl.WebApplicationExceptionMapper</td>
<td class="LineOfCaller">72</td>
<td class="Message">javax.ws.rs.WebApplicationException: HTTP 415 Unsupported Media Type
	at org.apache.cxf.jaxrs.utils.JAXRSUtils.readFromMessageBody(JAXRSUtils.java:1321)
	at org.apache.cxf.jaxrs.utils.JAXRSUtils.processParameter(JAXRSUtils.java:825)
	at org.apache.cxf.jaxrs.utils.JAXRSUtils.processParameters(JAXRSUtils.java:789)
	at org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor.processRequest(JAXRSInInterceptor.java:212)
	at org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor.handleMessage(JAXRSInInterceptor.java:77)
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:308)
	at org.apache.cxf.transport.ChainInitiationObserver.onMessage(ChainInitiationObserver.java:121)
	at org.apache.cxf.transport.http.AbstractHTTPDestination.invoke(AbstractHTTPDestination.java:262)
	at org.apache.cxf.transport.servlet.ServletController.invokeDestination(ServletController.java:234)
	at org.apache.cxf.transport.servlet.ServletController.invoke(ServletController.java:208)
	at org.apache.cxf.transport.servlet.ServletController.invoke(ServletController.java:160)
	at org.apache.cxf.transport.servlet.CXFNonSpringServlet.invoke(CXFNonSpringServlet.java:180)
	at org.apache.cxf.transport.servlet.AbstractHTTPServlet.handleRequest(AbstractHTTPServlet.java:299)
	at org.apache.cxf.transport.servlet.AbstractHTTPServlet.doPost(AbstractHTTPServlet.java:218)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:707)
	at org.apache.cxf.transport.servlet.AbstractHTTPServlet.service(AbstractHTTPServlet.java:274)
	at io.undertow.servlet.handlers.ServletHandler.handleRequest(ServletHandler.java:85)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:129)
	at org.springframework.boot.web.filter.ApplicationContextHeaderFilter.doFilterInternal(ApplicationContextHeaderFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.boot.actuate.trace.WebRequestTraceFilter.doFilterInternal(WebRequestTraceFilter.java:110)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.boot.actuate.autoconfigure.MetricsFilter.doFilterInternal(MetricsFilter.java:106)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at io.undertow.servlet.handlers.FilterHandler.handleRequest(FilterHandler.java:84)
	at io.undertow.servlet.handlers.security.ServletSecurityRoleHandler.handleRequest(ServletSecurityRoleHandler.java:62)
	at io.undertow.servlet.handlers.ServletDispatchingHandler.handleRequest(ServletDispatchingHandler.java:36)
	at io.undertow.servlet.handlers.security.SSLInformationAssociationHandler.handleRequest(SSLInformationAssociationHandler.java:131)
	at io.undertow.servlet.handlers.security.ServletAuthenticationCallHandler.handleRequest(ServletAuthenticationCallHandler.java:57)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.security.handlers.AbstractConfidentialityHandler.handleRequest(AbstractConfidentialityHandler.java:46)
	at io.undertow.servlet.handlers.security.ServletConfidentialityConstraintHandler.handleRequest(ServletConfidentialityConstraintHandler.java:64)
	at io.undertow.security.handlers.AuthenticationMechanismsHandler.handleRequest(AuthenticationMechanismsHandler.java:60)
	at io.undertow.servlet.handlers.security.CachedAuthenticatedSessionHandler.handleRequest(CachedAuthenticatedSessionHandler.java:77)
	at io.undertow.security.handlers.AbstractSecurityContextAssociationHandler.handleRequest(AbstractSecurityContextAssociationHandler.java:43)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.servlet.handlers.ServletInitialHandler.handleFirstRequest(ServletInitialHandler.java:292)
	at io.undertow.servlet.handlers.ServletInitialHandler.access$100(ServletInitialHandler.java:81)
	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:138)
	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:135)
	at io.undertow.servlet.core.ServletRequestContextThreadSetupAction$1.call(ServletRequestContextThreadSetupAction.java:48)
	at io.undertow.servlet.core.ContextClassLoaderSetupAction$1.call(ContextClassLoaderSetupAction.java:43)
	at io.undertow.servlet.handlers.ServletInitialHandler.dispatchRequest(ServletInitialHandler.java:272)
	at io.undertow.servlet.handlers.ServletInitialHandler.access$000(ServletInitialHandler.java:81)
	at io.undertow.servlet.handlers.ServletInitialHandler$1.handleRequest(ServletInitialHandler.java:104)
	at io.undertow.server.Connectors.executeRootHandler(Connectors.java:211)
	at io.undertow.server.HttpServerExchange$1.run(HttpServerExchange.java:809)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
</td>
</tr>

<tr class="error even">
<td class="Date">15:16:12.147</td>
<td class="Thread">XNIO-2 task-3</td>
<td class="Level">ERROR</td>
<td class="Logger">org.apache.cxf.jaxrs.utils.JAXRSUtils</td>
<td class="LineOfCaller">1793</td>
<td class="Message">No message body reader has been found for class co.com.entelgy.model.RequestRest, ContentType: application/octet-stream</td>
</tr>

<tr class="warn odd">
<td class="Date">15:16:12.157</td>
<td class="Thread">XNIO-2 task-3</td>
<td class="Level">WARN</td>
<td class="Logger">org.apache.cxf.jaxrs.impl.WebApplicationExceptionMapper</td>
<td class="LineOfCaller">72</td>
<td class="Message">javax.ws.rs.WebApplicationException: HTTP 415 Unsupported Media Type
	at org.apache.cxf.jaxrs.utils.JAXRSUtils.readFromMessageBody(JAXRSUtils.java:1321)
	at org.apache.cxf.jaxrs.utils.JAXRSUtils.processParameter(JAXRSUtils.java:825)
	at org.apache.cxf.jaxrs.utils.JAXRSUtils.processParameters(JAXRSUtils.java:789)
	at org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor.processRequest(JAXRSInInterceptor.java:212)
	at org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor.handleMessage(JAXRSInInterceptor.java:77)
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:308)
	at org.apache.cxf.transport.ChainInitiationObserver.onMessage(ChainInitiationObserver.java:121)
	at org.apache.cxf.transport.http.AbstractHTTPDestination.invoke(AbstractHTTPDestination.java:262)
	at org.apache.cxf.transport.servlet.ServletController.invokeDestination(ServletController.java:234)
	at org.apache.cxf.transport.servlet.ServletController.invoke(ServletController.java:208)
	at org.apache.cxf.transport.servlet.ServletController.invoke(ServletController.java:160)
	at org.apache.cxf.transport.servlet.CXFNonSpringServlet.invoke(CXFNonSpringServlet.java:180)
	at org.apache.cxf.transport.servlet.AbstractHTTPServlet.handleRequest(AbstractHTTPServlet.java:299)
	at org.apache.cxf.transport.servlet.AbstractHTTPServlet.doPost(AbstractHTTPServlet.java:218)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:707)
	at org.apache.cxf.transport.servlet.AbstractHTTPServlet.service(AbstractHTTPServlet.java:274)
	at io.undertow.servlet.handlers.ServletHandler.handleRequest(ServletHandler.java:85)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:129)
	at org.springframework.boot.web.filter.ApplicationContextHeaderFilter.doFilterInternal(ApplicationContextHeaderFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.boot.actuate.trace.WebRequestTraceFilter.doFilterInternal(WebRequestTraceFilter.java:110)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.boot.actuate.autoconfigure.MetricsFilter.doFilterInternal(MetricsFilter.java:106)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at io.undertow.servlet.handlers.FilterHandler.handleRequest(FilterHandler.java:84)
	at io.undertow.servlet.handlers.security.ServletSecurityRoleHandler.handleRequest(ServletSecurityRoleHandler.java:62)
	at io.undertow.servlet.handlers.ServletDispatchingHandler.handleRequest(ServletDispatchingHandler.java:36)
	at io.undertow.servlet.handlers.security.SSLInformationAssociationHandler.handleRequest(SSLInformationAssociationHandler.java:131)
	at io.undertow.servlet.handlers.security.ServletAuthenticationCallHandler.handleRequest(ServletAuthenticationCallHandler.java:57)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.security.handlers.AbstractConfidentialityHandler.handleRequest(AbstractConfidentialityHandler.java:46)
	at io.undertow.servlet.handlers.security.ServletConfidentialityConstraintHandler.handleRequest(ServletConfidentialityConstraintHandler.java:64)
	at io.undertow.security.handlers.AuthenticationMechanismsHandler.handleRequest(AuthenticationMechanismsHandler.java:60)
	at io.undertow.servlet.handlers.security.CachedAuthenticatedSessionHandler.handleRequest(CachedAuthenticatedSessionHandler.java:77)
	at io.undertow.security.handlers.AbstractSecurityContextAssociationHandler.handleRequest(AbstractSecurityContextAssociationHandler.java:43)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.servlet.handlers.ServletInitialHandler.handleFirstRequest(ServletInitialHandler.java:292)
	at io.undertow.servlet.handlers.ServletInitialHandler.access$100(ServletInitialHandler.java:81)
	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:138)
	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:135)
	at io.undertow.servlet.core.ServletRequestContextThreadSetupAction$1.call(ServletRequestContextThreadSetupAction.java:48)
	at io.undertow.servlet.core.ContextClassLoaderSetupAction$1.call(ContextClassLoaderSetupAction.java:43)
	at io.undertow.servlet.handlers.ServletInitialHandler.dispatchRequest(ServletInitialHandler.java:272)
	at io.undertow.servlet.handlers.ServletInitialHandler.access$000(ServletInitialHandler.java:81)
	at io.undertow.servlet.handlers.ServletInitialHandler$1.handleRequest(ServletInitialHandler.java:104)
	at io.undertow.server.Connectors.executeRootHandler(Connectors.java:211)
	at io.undertow.server.HttpServerExchange$1.run(HttpServerExchange.java:809)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
</td>
</tr>

<tr class="error even">
<td class="Date">15:16:13.526</td>
<td class="Thread">XNIO-2 task-4</td>
<td class="Level">ERROR</td>
<td class="Logger">org.apache.cxf.jaxrs.utils.JAXRSUtils</td>
<td class="LineOfCaller">1793</td>
<td class="Message">No message body reader has been found for class co.com.entelgy.model.RequestRest, ContentType: application/octet-stream</td>
</tr>

<tr class="warn odd">
<td class="Date">15:16:13.550</td>
<td class="Thread">XNIO-2 task-4</td>
<td class="Level">WARN</td>
<td class="Logger">org.apache.cxf.jaxrs.impl.WebApplicationExceptionMapper</td>
<td class="LineOfCaller">72</td>
<td class="Message">javax.ws.rs.WebApplicationException: HTTP 415 Unsupported Media Type
	at org.apache.cxf.jaxrs.utils.JAXRSUtils.readFromMessageBody(JAXRSUtils.java:1321)
	at org.apache.cxf.jaxrs.utils.JAXRSUtils.processParameter(JAXRSUtils.java:825)
	at org.apache.cxf.jaxrs.utils.JAXRSUtils.processParameters(JAXRSUtils.java:789)
	at org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor.processRequest(JAXRSInInterceptor.java:212)
	at org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor.handleMessage(JAXRSInInterceptor.java:77)
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:308)
	at org.apache.cxf.transport.ChainInitiationObserver.onMessage(ChainInitiationObserver.java:121)
	at org.apache.cxf.transport.http.AbstractHTTPDestination.invoke(AbstractHTTPDestination.java:262)
	at org.apache.cxf.transport.servlet.ServletController.invokeDestination(ServletController.java:234)
	at org.apache.cxf.transport.servlet.ServletController.invoke(ServletController.java:208)
	at org.apache.cxf.transport.servlet.ServletController.invoke(ServletController.java:160)
	at org.apache.cxf.transport.servlet.CXFNonSpringServlet.invoke(CXFNonSpringServlet.java:180)
	at org.apache.cxf.transport.servlet.AbstractHTTPServlet.handleRequest(AbstractHTTPServlet.java:299)
	at org.apache.cxf.transport.servlet.AbstractHTTPServlet.doPost(AbstractHTTPServlet.java:218)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:707)
	at org.apache.cxf.transport.servlet.AbstractHTTPServlet.service(AbstractHTTPServlet.java:274)
	at io.undertow.servlet.handlers.ServletHandler.handleRequest(ServletHandler.java:85)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:129)
	at org.springframework.boot.web.filter.ApplicationContextHeaderFilter.doFilterInternal(ApplicationContextHeaderFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.boot.actuate.trace.WebRequestTraceFilter.doFilterInternal(WebRequestTraceFilter.java:110)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.boot.actuate.autoconfigure.MetricsFilter.doFilterInternal(MetricsFilter.java:106)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at io.undertow.servlet.handlers.FilterHandler.handleRequest(FilterHandler.java:84)
	at io.undertow.servlet.handlers.security.ServletSecurityRoleHandler.handleRequest(ServletSecurityRoleHandler.java:62)
	at io.undertow.servlet.handlers.ServletDispatchingHandler.handleRequest(ServletDispatchingHandler.java:36)
	at io.undertow.servlet.handlers.security.SSLInformationAssociationHandler.handleRequest(SSLInformationAssociationHandler.java:131)
	at io.undertow.servlet.handlers.security.ServletAuthenticationCallHandler.handleRequest(ServletAuthenticationCallHandler.java:57)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.security.handlers.AbstractConfidentialityHandler.handleRequest(AbstractConfidentialityHandler.java:46)
	at io.undertow.servlet.handlers.security.ServletConfidentialityConstraintHandler.handleRequest(ServletConfidentialityConstraintHandler.java:64)
	at io.undertow.security.handlers.AuthenticationMechanismsHandler.handleRequest(AuthenticationMechanismsHandler.java:60)
	at io.undertow.servlet.handlers.security.CachedAuthenticatedSessionHandler.handleRequest(CachedAuthenticatedSessionHandler.java:77)
	at io.undertow.security.handlers.AbstractSecurityContextAssociationHandler.handleRequest(AbstractSecurityContextAssociationHandler.java:43)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.servlet.handlers.ServletInitialHandler.handleFirstRequest(ServletInitialHandler.java:292)
	at io.undertow.servlet.handlers.ServletInitialHandler.access$100(ServletInitialHandler.java:81)
	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:138)
	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:135)
	at io.undertow.servlet.core.ServletRequestContextThreadSetupAction$1.call(ServletRequestContextThreadSetupAction.java:48)
	at io.undertow.servlet.core.ContextClassLoaderSetupAction$1.call(ContextClassLoaderSetupAction.java:43)
	at io.undertow.servlet.handlers.ServletInitialHandler.dispatchRequest(ServletInitialHandler.java:272)
	at io.undertow.servlet.handlers.ServletInitialHandler.access$000(ServletInitialHandler.java:81)
	at io.undertow.servlet.handlers.ServletInitialHandler$1.handleRequest(ServletInitialHandler.java:104)
	at io.undertow.server.Connectors.executeRootHandler(Connectors.java:211)
	at io.undertow.server.HttpServerExchange$1.run(HttpServerExchange.java:809)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
</td>
</tr>

<tr class="error even">
<td class="Date">15:16:22.870</td>
<td class="Thread">XNIO-2 task-5</td>
<td class="Level">ERROR</td>
<td class="Logger">org.apache.cxf.jaxrs.utils.JAXRSUtils</td>
<td class="LineOfCaller">1793</td>
<td class="Message">No message body reader has been found for class co.com.entelgy.model.RequestRest, ContentType: application/octet-stream</td>
</tr>

<tr class="warn odd">
<td class="Date">15:16:22.875</td>
<td class="Thread">XNIO-2 task-5</td>
<td class="Level">WARN</td>
<td class="Logger">org.apache.cxf.jaxrs.impl.WebApplicationExceptionMapper</td>
<td class="LineOfCaller">72</td>
<td class="Message">javax.ws.rs.WebApplicationException: HTTP 415 Unsupported Media Type
	at org.apache.cxf.jaxrs.utils.JAXRSUtils.readFromMessageBody(JAXRSUtils.java:1321)
	at org.apache.cxf.jaxrs.utils.JAXRSUtils.processParameter(JAXRSUtils.java:825)
	at org.apache.cxf.jaxrs.utils.JAXRSUtils.processParameters(JAXRSUtils.java:789)
	at org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor.processRequest(JAXRSInInterceptor.java:212)
	at org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor.handleMessage(JAXRSInInterceptor.java:77)
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:308)
	at org.apache.cxf.transport.ChainInitiationObserver.onMessage(ChainInitiationObserver.java:121)
	at org.apache.cxf.transport.http.AbstractHTTPDestination.invoke(AbstractHTTPDestination.java:262)
	at org.apache.cxf.transport.servlet.ServletController.invokeDestination(ServletController.java:234)
	at org.apache.cxf.transport.servlet.ServletController.invoke(ServletController.java:208)
	at org.apache.cxf.transport.servlet.ServletController.invoke(ServletController.java:160)
	at org.apache.cxf.transport.servlet.CXFNonSpringServlet.invoke(CXFNonSpringServlet.java:180)
	at org.apache.cxf.transport.servlet.AbstractHTTPServlet.handleRequest(AbstractHTTPServlet.java:299)
	at org.apache.cxf.transport.servlet.AbstractHTTPServlet.doPost(AbstractHTTPServlet.java:218)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:707)
	at org.apache.cxf.transport.servlet.AbstractHTTPServlet.service(AbstractHTTPServlet.java:274)
	at io.undertow.servlet.handlers.ServletHandler.handleRequest(ServletHandler.java:85)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:129)
	at org.springframework.boot.web.filter.ApplicationContextHeaderFilter.doFilterInternal(ApplicationContextHeaderFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.boot.actuate.trace.WebRequestTraceFilter.doFilterInternal(WebRequestTraceFilter.java:110)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.boot.actuate.autoconfigure.MetricsFilter.doFilterInternal(MetricsFilter.java:106)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at io.undertow.servlet.handlers.FilterHandler.handleRequest(FilterHandler.java:84)
	at io.undertow.servlet.handlers.security.ServletSecurityRoleHandler.handleRequest(ServletSecurityRoleHandler.java:62)
	at io.undertow.servlet.handlers.ServletDispatchingHandler.handleRequest(ServletDispatchingHandler.java:36)
	at io.undertow.servlet.handlers.security.SSLInformationAssociationHandler.handleRequest(SSLInformationAssociationHandler.java:131)
	at io.undertow.servlet.handlers.security.ServletAuthenticationCallHandler.handleRequest(ServletAuthenticationCallHandler.java:57)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.security.handlers.AbstractConfidentialityHandler.handleRequest(AbstractConfidentialityHandler.java:46)
	at io.undertow.servlet.handlers.security.ServletConfidentialityConstraintHandler.handleRequest(ServletConfidentialityConstraintHandler.java:64)
	at io.undertow.security.handlers.AuthenticationMechanismsHandler.handleRequest(AuthenticationMechanismsHandler.java:60)
	at io.undertow.servlet.handlers.security.CachedAuthenticatedSessionHandler.handleRequest(CachedAuthenticatedSessionHandler.java:77)
	at io.undertow.security.handlers.AbstractSecurityContextAssociationHandler.handleRequest(AbstractSecurityContextAssociationHandler.java:43)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.servlet.handlers.ServletInitialHandler.handleFirstRequest(ServletInitialHandler.java:292)
	at io.undertow.servlet.handlers.ServletInitialHandler.access$100(ServletInitialHandler.java:81)
	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:138)
	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:135)
	at io.undertow.servlet.core.ServletRequestContextThreadSetupAction$1.call(ServletRequestContextThreadSetupAction.java:48)
	at io.undertow.servlet.core.ContextClassLoaderSetupAction$1.call(ContextClassLoaderSetupAction.java:43)
	at io.undertow.servlet.handlers.ServletInitialHandler.dispatchRequest(ServletInitialHandler.java:272)
	at io.undertow.servlet.handlers.ServletInitialHandler.access$000(ServletInitialHandler.java:81)
	at io.undertow.servlet.handlers.ServletInitialHandler$1.handleRequest(ServletInitialHandler.java:104)
	at io.undertow.server.Connectors.executeRootHandler(Connectors.java:211)
	at io.undertow.server.HttpServerExchange$1.run(HttpServerExchange.java:809)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
</td>
</tr>

<tr class="error even">
<td class="Date">15:16:23.721</td>
<td class="Thread">XNIO-2 task-6</td>
<td class="Level">ERROR</td>
<td class="Logger">org.apache.cxf.jaxrs.utils.JAXRSUtils</td>
<td class="LineOfCaller">1793</td>
<td class="Message">No message body reader has been found for class co.com.entelgy.model.RequestRest, ContentType: application/octet-stream</td>
</tr>

<tr class="warn odd">
<td class="Date">15:16:23.725</td>
<td class="Thread">XNIO-2 task-6</td>
<td class="Level">WARN</td>
<td class="Logger">org.apache.cxf.jaxrs.impl.WebApplicationExceptionMapper</td>
<td class="LineOfCaller">72</td>
<td class="Message">javax.ws.rs.WebApplicationException: HTTP 415 Unsupported Media Type
	at org.apache.cxf.jaxrs.utils.JAXRSUtils.readFromMessageBody(JAXRSUtils.java:1321)
	at org.apache.cxf.jaxrs.utils.JAXRSUtils.processParameter(JAXRSUtils.java:825)
	at org.apache.cxf.jaxrs.utils.JAXRSUtils.processParameters(JAXRSUtils.java:789)
	at org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor.processRequest(JAXRSInInterceptor.java:212)
	at org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor.handleMessage(JAXRSInInterceptor.java:77)
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:308)
	at org.apache.cxf.transport.ChainInitiationObserver.onMessage(ChainInitiationObserver.java:121)
	at org.apache.cxf.transport.http.AbstractHTTPDestination.invoke(AbstractHTTPDestination.java:262)
	at org.apache.cxf.transport.servlet.ServletController.invokeDestination(ServletController.java:234)
	at org.apache.cxf.transport.servlet.ServletController.invoke(ServletController.java:208)
	at org.apache.cxf.transport.servlet.ServletController.invoke(ServletController.java:160)
	at org.apache.cxf.transport.servlet.CXFNonSpringServlet.invoke(CXFNonSpringServlet.java:180)
	at org.apache.cxf.transport.servlet.AbstractHTTPServlet.handleRequest(AbstractHTTPServlet.java:299)
	at org.apache.cxf.transport.servlet.AbstractHTTPServlet.doPost(AbstractHTTPServlet.java:218)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:707)
	at org.apache.cxf.transport.servlet.AbstractHTTPServlet.service(AbstractHTTPServlet.java:274)
	at io.undertow.servlet.handlers.ServletHandler.handleRequest(ServletHandler.java:85)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:129)
	at org.springframework.boot.web.filter.ApplicationContextHeaderFilter.doFilterInternal(ApplicationContextHeaderFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.boot.actuate.trace.WebRequestTraceFilter.doFilterInternal(WebRequestTraceFilter.java:110)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.boot.actuate.autoconfigure.MetricsFilter.doFilterInternal(MetricsFilter.java:106)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at io.undertow.servlet.handlers.FilterHandler.handleRequest(FilterHandler.java:84)
	at io.undertow.servlet.handlers.security.ServletSecurityRoleHandler.handleRequest(ServletSecurityRoleHandler.java:62)
	at io.undertow.servlet.handlers.ServletDispatchingHandler.handleRequest(ServletDispatchingHandler.java:36)
	at io.undertow.servlet.handlers.security.SSLInformationAssociationHandler.handleRequest(SSLInformationAssociationHandler.java:131)
	at io.undertow.servlet.handlers.security.ServletAuthenticationCallHandler.handleRequest(ServletAuthenticationCallHandler.java:57)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.security.handlers.AbstractConfidentialityHandler.handleRequest(AbstractConfidentialityHandler.java:46)
	at io.undertow.servlet.handlers.security.ServletConfidentialityConstraintHandler.handleRequest(ServletConfidentialityConstraintHandler.java:64)
	at io.undertow.security.handlers.AuthenticationMechanismsHandler.handleRequest(AuthenticationMechanismsHandler.java:60)
	at io.undertow.servlet.handlers.security.CachedAuthenticatedSessionHandler.handleRequest(CachedAuthenticatedSessionHandler.java:77)
	at io.undertow.security.handlers.AbstractSecurityContextAssociationHandler.handleRequest(AbstractSecurityContextAssociationHandler.java:43)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.servlet.handlers.ServletInitialHandler.handleFirstRequest(ServletInitialHandler.java:292)
	at io.undertow.servlet.handlers.ServletInitialHandler.access$100(ServletInitialHandler.java:81)
	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:138)
	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:135)
	at io.undertow.servlet.core.ServletRequestContextThreadSetupAction$1.call(ServletRequestContextThreadSetupAction.java:48)
	at io.undertow.servlet.core.ContextClassLoaderSetupAction$1.call(ContextClassLoaderSetupAction.java:43)
	at io.undertow.servlet.handlers.ServletInitialHandler.dispatchRequest(ServletInitialHandler.java:272)
	at io.undertow.servlet.handlers.ServletInitialHandler.access$000(ServletInitialHandler.java:81)
	at io.undertow.servlet.handlers.ServletInitialHandler$1.handleRequest(ServletInitialHandler.java:104)
	at io.undertow.server.Connectors.executeRootHandler(Connectors.java:211)
	at io.undertow.server.HttpServerExchange$1.run(HttpServerExchange.java:809)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
</td>
</tr>

<tr class="info even">
<td class="Date">15:16:59.924</td>
<td class="Thread">XNIO-2 task-7</td>
<td class="Level">INFO</td>
<td class="Logger">rh1</td>
<td class="LineOfCaller">159</td>
<td class="Message">FINALZA RUTA ((({
 &quot;errnumOut&quot;:&quot;0&quot;,
 &quot;saldoOut&quot;:&quot;280344710.07922523&quot;,
 &quot;descrOut&quot;:&quot;Transaccion Exitosa&quot;
})))</td>
</tr>

<tr class="info odd">
<td class="Date">15:17:35.294</td>
<td class="Thread">XNIO-2 task-9</td>
<td class="Level">INFO</td>
<td class="Logger">rh1</td>
<td class="LineOfCaller">159</td>
<td class="Message">FINALZA RUTA ((({
 &quot;errnumOut&quot;:&quot;0&quot;,
 &quot;saldoOut&quot;:&quot;280344710.07922523&quot;,
 &quot;descrOut&quot;:&quot;Transaccion Exitosa&quot;
})))</td>
</tr>

<tr class="info even">
<td class="Date">15:17:42.350</td>
<td class="Thread">XNIO-2 task-11</td>
<td class="Level">INFO</td>
<td class="Logger">rh1</td>
<td class="LineOfCaller">159</td>
<td class="Message">FINALZA RUTA ((({
 &quot;errnumOut&quot;:&quot;0&quot;,
 &quot;saldoOut&quot;:&quot;280344710.07922523&quot;,
 &quot;descrOut&quot;:&quot;Transaccion Exitosa&quot;
})))</td>
</tr>

<tr class="info odd">
<td class="Date">15:17:43.570</td>
<td class="Thread">XNIO-2 task-13</td>
<td class="Level">INFO</td>
<td class="Logger">rh1</td>
<td class="LineOfCaller">159</td>
<td class="Message">FINALZA RUTA ((({
 &quot;errnumOut&quot;:&quot;0&quot;,
 &quot;saldoOut&quot;:&quot;280344710.07922523&quot;,
 &quot;descrOut&quot;:&quot;Transaccion Exitosa&quot;
})))</td>
</tr>

<tr class="error even">
<td class="Date">15:18:05.093</td>
<td class="Thread">XNIO-2 task-15</td>
<td class="Level">ERROR</td>
<td class="Logger">rh1</td>
<td class="LineOfCaller">156</td>
<td class="Message">ERROR: CXF-SERVICE-SALDOPAGOS-API || SALDOENCARGOS-ROUTE-MAIN || ID-DESKTOP-0JNP98L-50080-1572379556104-0-17 || 2019-10-29T15:18:05:090} || Validation failed for: co.com.entelgy.model.RequestRest@6f82865a errors: [property: moviCtcoNegocio; value: ; constraint: moviCtcoNegocio no puede estar vacio; ]. Exchange[ID-DESKTOP-0JNP98L-50080-1572379556104-0-18]</td>
</tr>

<tr class="error odd">
<td class="Date">15:22:53.751</td>
<td class="Thread">XNIO-2 task-17</td>
<td class="Level">ERROR</td>
<td class="Logger">rh1</td>
<td class="LineOfCaller">156</td>
<td class="Message">ERROR: CXF-SERVICE-SALDOPAGOS-API || SALDOENCARGOS-ROUTE-MAIN || ID-DESKTOP-0JNP98L-50080-1572379556104-0-20 || 2019-10-29T15:22:53:751} || Validation failed for: co.com.entelgy.model.RequestRest@1b163057 errors: [property: moviCtcoNegocio; value: ; constraint: moviCtcoNegocio no puede estar vacio; ]. Exchange[ID-DESKTOP-0JNP98L-50080-1572379556104-0-21]</td>
</tr>

<tr class="error even">
<td class="Date">15:23:01.218</td>
<td class="Thread">XNIO-2 task-19</td>
<td class="Level">ERROR</td>
<td class="Logger">rh1</td>
<td class="LineOfCaller">156</td>
<td class="Message">ERROR: CXF-SERVICE-SALDOPAGOS-API || SALDOENCARGOS-ROUTE-MAIN || ID-DESKTOP-0JNP98L-50080-1572379556104-0-23 || 2019-10-29T15:23:01:217} || Validation failed for: co.com.entelgy.model.RequestRest@79a46713 errors: [property: moviCtcoCiasNego; value: ; constraint: moviCtcoCiasNego no puede estar vacio; property: moviCtcoNegocio; value: ; constraint: moviCtcoNegocio no puede estar vacio; ]. Exchange[ID-DESKTOP-0JNP98L-50080-1572379556104-0-24]</td>
</tr>

<tr class="warn odd">
<td class="Date">15:23:09.947</td>
<td class="Thread">XNIO-2 task-21</td>
<td class="Level">WARN</td>
<td class="Logger">org.apache.cxf.jaxrs.impl.WebApplicationExceptionMapper</td>
<td class="LineOfCaller">72</td>
<td class="Message">javax.ws.rs.InternalServerErrorException: HTTP 500 Internal Server Error
	at org.apache.cxf.jaxrs.utils.SpecExceptions.toInternalServerErrorException(SpecExceptions.java:79)
	at org.apache.cxf.jaxrs.utils.ExceptionUtils.toInternalServerErrorException(ExceptionUtils.java:113)
	at org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor.convertExceptionToResponseIfPossible(JAXRSInInterceptor.java:227)
	at org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor.processRequest(JAXRSInInterceptor.java:215)
	at org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor.handleMessage(JAXRSInInterceptor.java:77)
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:308)
	at org.apache.cxf.transport.ChainInitiationObserver.onMessage(ChainInitiationObserver.java:121)
	at org.apache.cxf.transport.http.AbstractHTTPDestination.invoke(AbstractHTTPDestination.java:262)
	at org.apache.cxf.transport.servlet.ServletController.invokeDestination(ServletController.java:234)
	at org.apache.cxf.transport.servlet.ServletController.invoke(ServletController.java:208)
	at org.apache.cxf.transport.servlet.ServletController.invoke(ServletController.java:160)
	at org.apache.cxf.transport.servlet.CXFNonSpringServlet.invoke(CXFNonSpringServlet.java:180)
	at org.apache.cxf.transport.servlet.AbstractHTTPServlet.handleRequest(AbstractHTTPServlet.java:299)
	at org.apache.cxf.transport.servlet.AbstractHTTPServlet.doPost(AbstractHTTPServlet.java:218)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:707)
	at org.apache.cxf.transport.servlet.AbstractHTTPServlet.service(AbstractHTTPServlet.java:274)
	at io.undertow.servlet.handlers.ServletHandler.handleRequest(ServletHandler.java:85)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:129)
	at org.springframework.boot.web.filter.ApplicationContextHeaderFilter.doFilterInternal(ApplicationContextHeaderFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.boot.actuate.trace.WebRequestTraceFilter.doFilterInternal(WebRequestTraceFilter.java:110)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.boot.actuate.autoconfigure.MetricsFilter.doFilterInternal(MetricsFilter.java:106)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at io.undertow.servlet.handlers.FilterHandler.handleRequest(FilterHandler.java:84)
	at io.undertow.servlet.handlers.security.ServletSecurityRoleHandler.handleRequest(ServletSecurityRoleHandler.java:62)
	at io.undertow.servlet.handlers.ServletDispatchingHandler.handleRequest(ServletDispatchingHandler.java:36)
	at io.undertow.servlet.handlers.security.SSLInformationAssociationHandler.handleRequest(SSLInformationAssociationHandler.java:131)
	at io.undertow.servlet.handlers.security.ServletAuthenticationCallHandler.handleRequest(ServletAuthenticationCallHandler.java:57)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.security.handlers.AbstractConfidentialityHandler.handleRequest(AbstractConfidentialityHandler.java:46)
	at io.undertow.servlet.handlers.security.ServletConfidentialityConstraintHandler.handleRequest(ServletConfidentialityConstraintHandler.java:64)
	at io.undertow.security.handlers.AuthenticationMechanismsHandler.handleRequest(AuthenticationMechanismsHandler.java:60)
	at io.undertow.servlet.handlers.security.CachedAuthenticatedSessionHandler.handleRequest(CachedAuthenticatedSessionHandler.java:77)
	at io.undertow.security.handlers.AbstractSecurityContextAssociationHandler.handleRequest(AbstractSecurityContextAssociationHandler.java:43)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.servlet.handlers.ServletInitialHandler.handleFirstRequest(ServletInitialHandler.java:292)
	at io.undertow.servlet.handlers.ServletInitialHandler.access$100(ServletInitialHandler.java:81)
	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:138)
	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:135)
	at io.undertow.servlet.core.ServletRequestContextThreadSetupAction$1.call(ServletRequestContextThreadSetupAction.java:48)
	at io.undertow.servlet.core.ContextClassLoaderSetupAction$1.call(ContextClassLoaderSetupAction.java:43)
	at io.undertow.servlet.handlers.ServletInitialHandler.dispatchRequest(ServletInitialHandler.java:272)
	at io.undertow.servlet.handlers.ServletInitialHandler.access$000(ServletInitialHandler.java:81)
	at io.undertow.servlet.handlers.ServletInitialHandler$1.handleRequest(ServletInitialHandler.java:104)
	at io.undertow.server.Connectors.executeRootHandler(Connectors.java:211)
	at io.undertow.server.HttpServerExchange$1.run(HttpServerExchange.java:809)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.fasterxml.jackson.core.JsonParseException: Unexpected character (&#39;}&#39; (code 125)): expected a value
 at [Source: org.apache.cxf.transport.http.AbstractHTTPDestination$1@798aeca6; line: 5, column: 2]
	at com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:1702)
	at com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:558)
	at com.fasterxml.jackson.core.base.ParserMinimalBase._reportUnexpectedChar(ParserMinimalBase.java:456)
	at com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2656)
	at com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextFieldName(UTF8StreamJsonParser.java:1101)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:283)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:140)
	at com.fasterxml.jackson.databind.ObjectReader._bind(ObjectReader.java:1583)
	at com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:964)
	at com.fasterxml.jackson.jaxrs.base.ProviderBase.readFrom(ProviderBase.java:815)
	at org.apache.cxf.jaxrs.utils.JAXRSUtils.readFromMessageBodyReader(JAXRSUtils.java:1348)
	at org.apache.cxf.jaxrs.utils.JAXRSUtils.readFromMessageBody(JAXRSUtils.java:1299)
	at org.apache.cxf.jaxrs.utils.JAXRSUtils.processParameter(JAXRSUtils.java:825)
	at org.apache.cxf.jaxrs.utils.JAXRSUtils.processParameters(JAXRSUtils.java:789)
	at org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor.processRequest(JAXRSInInterceptor.java:212)
	... 69 more
</td>
</tr>

<tr class="error even">
<td class="Date">15:23:23.778</td>
<td class="Thread">XNIO-2 task-22</td>
<td class="Level">ERROR</td>
<td class="Logger">rh1</td>
<td class="LineOfCaller">156</td>
<td class="Message">ERROR: CXF-SERVICE-SALDOPAGOS-API || SALDOENCARGOS-ROUTE-MAIN || ID-DESKTOP-0JNP98L-50080-1572379556104-0-26 || 2019-10-29T15:23:23:777} || Validation failed for: co.com.entelgy.model.RequestRest@3182b058 errors: [property: moviCtcoCiasNego; value: ; constraint: moviCtcoCiasNego no puede estar vacio; property: moviEncargo; value: ; constraint: moviEncargo no puede estar vacio; property: moviCtcoNegocio; value: ; constraint: moviCtcoNegocio no puede estar vacio; ]. Exchange[ID-DESKTOP-0JNP98L-50080-1572379556104-0-27]</td>
</tr>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
  <head>
    <title>Logback Log Messages</title>
<style  type="text/css">
table { margin-left: 2em; margin-right: 2em; border-left: 2px solid #AAA; }
TR.even { background: #FFFFFF; }
TR.odd { background: #EAEAEA; }
TR.warn TD.Level, TR.error TD.Level, TR.fatal TD.Level {font-weight: bold; color: #FF4040 }
TD { padding-right: 1ex; padding-left: 1ex; border-right: 2px solid #AAA; }
TD.Time, TD.Date { text-align: right; font-family: courier, monospace; font-size: smaller; }
TD.Thread { text-align: left; }
TD.Level { text-align: right; }
TD.Logger { text-align: left; }
TR.header { background: #596ED5; color: #FFF; font-weight: bold; font-size: larger; }
TD.Exception { background: #A2AEE8; font-family: courier, monospace;}
</style>

  </head>
<body>
<hr/>
<p>Log session start time Tue Oct 29 15:27:55 COT 2019</p><p></p>

<table cellspacing="0">
<tr class="header">
<td class="Date">Date</td>
<td class="Thread">Thread</td>
<td class="Level">Level</td>
<td class="Logger">Logger</td>
<td class="LineOfCaller">LineOfCaller</td>
<td class="Message">Message</td>
</tr>


<tr class="warn even">
<td class="Date">15:27:55.510</td>
<td class="Thread">main</td>
<td class="Level">WARN</td>
<td class="Logger">io.fabric8.kubernetes.client.Config</td>
<td class="LineOfCaller">347</td>
<td class="Message">Error reading service account token from: [/var/run/secrets/kubernetes.io/serviceaccount/token]. Ignoring.</td>
</tr>
</table>
</body></html><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
  <head>
    <title>Logback Log Messages</title>
<style  type="text/css">
table { margin-left: 2em; margin-right: 2em; border-left: 2px solid #AAA; }
TR.even { background: #FFFFFF; }
TR.odd { background: #EAEAEA; }
TR.warn TD.Level, TR.error TD.Level, TR.fatal TD.Level {font-weight: bold; color: #FF4040 }
TD { padding-right: 1ex; padding-left: 1ex; border-right: 2px solid #AAA; }
TD.Time, TD.Date { text-align: right; font-family: courier, monospace; font-size: smaller; }
TD.Thread { text-align: left; }
TD.Level { text-align: right; }
TD.Logger { text-align: left; }
TR.header { background: #596ED5; color: #FFF; font-weight: bold; font-size: larger; }
TD.Exception { background: #A2AEE8; font-family: courier, monospace;}
</style>

  </head>
<body>
<hr/>
<p>Log session start time Tue Oct 29 15:27:58 COT 2019</p><p></p>

<table cellspacing="0">
<tr class="header">
<td class="Date">Date</td>
<td class="Thread">Thread</td>
<td class="Level">Level</td>
<td class="Logger">Logger</td>
<td class="LineOfCaller">LineOfCaller</td>
<td class="Message">Message</td>
</tr>


<tr class="info even">
<td class="Date">15:27:59.064</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.context.annotation.AnnotationConfigApplicationContext</td>
<td class="LineOfCaller">583</td>
<td class="Message">Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@5f2a64da: startup date [Tue Oct 29 15:27:59 COT 2019]; root of context hierarchy</td>
</tr>

<tr class="info odd">
<td class="Date">15:27:59.879</td>
<td class="Thread">background-preinit</td>
<td class="Level">INFO</td>
<td class="Logger">org.hibernate.validator.internal.util.Version</td>
<td class="LineOfCaller">30</td>
<td class="Message">HV000001: Hibernate Validator 5.3.5.Final</td>
</tr>

<tr class="info even">
<td class="Date">15:28:02.469</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker</td>
<td class="LineOfCaller">325</td>
<td class="Message">Bean &#39;configurationPropertiesRebinderAutoConfiguration&#39; of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$320df59e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)</td>
</tr>

<tr class="warn odd">
<td class="Date">15:28:03.527</td>
<td class="Thread">main</td>
<td class="Level">WARN</td>
<td class="Logger">io.fabric8.kubernetes.client.Config</td>
<td class="LineOfCaller">347</td>
<td class="Message">Error reading service account token from: [/var/run/secrets/kubernetes.io/serviceaccount/token]. Ignoring.</td>
</tr>

<tr class="warn even">
<td class="Date">15:28:03.533</td>
<td class="Thread">main</td>
<td class="Level">WARN</td>
<td class="Logger">io.fabric8.spring.cloud.kubernetes.KubernetesClientProperties</td>
<td class="LineOfCaller">70</td>
<td class="Message">No namespace has been detected. Please specify KUBERNETES_NAMESPACE env var, or use a later kubernetes version (1.3 or later)</td>
</tr>
</table>
</body></html><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
  <head>
    <title>Logback Log Messages</title>
<style  type="text/css">
table { margin-left: 2em; margin-right: 2em; border-left: 2px solid #AAA; }
TR.even { background: #FFFFFF; }
TR.odd { background: #EAEAEA; }
TR.warn TD.Level, TR.error TD.Level, TR.fatal TD.Level {font-weight: bold; color: #FF4040 }
TD { padding-right: 1ex; padding-left: 1ex; border-right: 2px solid #AAA; }
TD.Time, TD.Date { text-align: right; font-family: courier, monospace; font-size: smaller; }
TD.Thread { text-align: left; }
TD.Level { text-align: right; }
TD.Logger { text-align: left; }
TR.header { background: #596ED5; color: #FFF; font-weight: bold; font-size: larger; }
TD.Exception { background: #A2AEE8; font-family: courier, monospace;}
</style>

  </head>
<body>
<hr/>
<p>Log session start time Tue Oct 29 15:28:04 COT 2019</p><p></p>

<table cellspacing="0">
<tr class="header">
<td class="Date">Date</td>
<td class="Thread">Thread</td>
<td class="Level">Level</td>
<td class="Logger">Logger</td>
<td class="LineOfCaller">LineOfCaller</td>
<td class="Message">Message</td>
</tr>


<tr class="warn even">
<td class="Date">15:28:05.023</td>
<td class="Thread">main</td>
<td class="Level">WARN</td>
<td class="Logger">io.fabric8.spring.cloud.kubernetes.config.ConfigMapPropertySource</td>
<td class="LineOfCaller">84</td>
<td class="Message">Can&#39;t read configMap with name: [saldoencargos] in namespace:[null]. Ignoring</td>
</tr>

<tr class="info odd">
<td class="Date">15:28:05.057</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration</td>
<td class="LineOfCaller">93</td>
<td class="Message">Located property source: ConfigMapPropertySource [name=&#39;configmap.saldoencargos.null&#39;]</td>
</tr>

<tr class="info even">
<td class="Date">15:28:05.072</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration</td>
<td class="LineOfCaller">93</td>
<td class="Message">Located property source: SecretsPropertySource [name=&#39;secrets.saldoencargos.null&#39;]</td>
</tr>
</table>
</body></html><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
  <head>
    <title>Logback Log Messages</title>
<style  type="text/css">
table { margin-left: 2em; margin-right: 2em; border-left: 2px solid #AAA; }
TR.even { background: #FFFFFF; }
TR.odd { background: #EAEAEA; }
TR.warn TD.Level, TR.error TD.Level, TR.fatal TD.Level {font-weight: bold; color: #FF4040 }
TD { padding-right: 1ex; padding-left: 1ex; border-right: 2px solid #AAA; }
TD.Time, TD.Date { text-align: right; font-family: courier, monospace; font-size: smaller; }
TD.Thread { text-align: left; }
TD.Level { text-align: right; }
TD.Logger { text-align: left; }
TR.header { background: #596ED5; color: #FFF; font-weight: bold; font-size: larger; }
TD.Exception { background: #A2AEE8; font-family: courier, monospace;}
</style>

  </head>
<body>
<hr/>
<p>Log session start time Tue Oct 29 15:28:05 COT 2019</p><p></p>

<table cellspacing="0">
<tr class="header">
<td class="Date">Date</td>
<td class="Thread">Thread</td>
<td class="Level">Level</td>
<td class="Logger">Logger</td>
<td class="LineOfCaller">LineOfCaller</td>
<td class="Message">Message</td>
</tr>


<tr class="info even">
<td class="Date">15:28:05.148</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">co.com.entelgy.Application</td>
<td class="LineOfCaller">593</td>
<td class="Message">No active profile set, falling back to default profiles: default</td>
</tr>

<tr class="info odd">
<td class="Date">15:28:05.231</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext</td>
<td class="LineOfCaller">583</td>
<td class="Message">Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@45e61007: startup date [Tue Oct 29 15:28:05 COT 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@5f2a64da</td>
</tr>

<tr class="info even">
<td class="Date">15:28:09.056</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.beans.factory.xml.XmlBeanDefinitionReader</td>
<td class="LineOfCaller">317</td>
<td class="Message">Loading XML bean definitions from class path resource [spring/camel-context.xml]</td>
</tr>

<tr class="info odd">
<td class="Date">15:28:13.627</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader</td>
<td class="LineOfCaller">300</td>
<td class="Message">Skipping bean definition for [BeanMethod:name=properties,declaringClass=org.apache.camel.spring.boot.CamelAutoConfiguration]: a definition for bean &#39;properties&#39; already exists. This top-level bean definition is considered as an override.</td>
</tr>

<tr class="info even">
<td class="Date">15:28:14.164</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.beans.factory.xml.XmlBeanDefinitionReader</td>
<td class="LineOfCaller">317</td>
<td class="Message">Loading XML bean definitions from class path resource [META-INF/cxf/cxf.xml]</td>
</tr>

<tr class="warn odd">
<td class="Date">15:28:15.431</td>
<td class="Thread">main</td>
<td class="Level">WARN</td>
<td class="Logger">org.springframework.context.annotation.ConfigurationClassPostProcessor</td>
<td class="LineOfCaller">373</td>
<td class="Message">Cannot enhance @Configuration bean definition &#39;refreshScope&#39; since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as &#39;static&#39;.</td>
</tr>

<tr class="info even">
<td class="Date">15:28:16.535</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.cloud.context.scope.GenericScope</td>
<td class="LineOfCaller">263</td>
<td class="Message">BeanFactory id=a1f7f09c-a0fc-3282-be21-d3abd014496f</td>
</tr>

<tr class="info odd">
<td class="Date">15:28:17.601</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker</td>
<td class="LineOfCaller">325</td>
<td class="Message">Bean &#39;org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration&#39; of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$15f3f2a1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)</td>
</tr>

<tr class="info even">
<td class="Date">15:28:17.858</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker</td>
<td class="LineOfCaller">325</td>
<td class="Message">Bean &#39;org.apache.camel.spring.boot.CamelAutoConfiguration&#39; of type [org.apache.camel.spring.boot.CamelAutoConfiguration$$EnhancerBySpringCGLIB$$381db8c0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)</td>
</tr>

<tr class="info odd">
<td class="Date">15:28:17.923</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker</td>
<td class="LineOfCaller">325</td>
<td class="Message">Bean &#39;org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration&#39; of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$320df59e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)</td>
</tr>

<tr class="info even">
<td class="Date">15:28:19.899</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.xnio</td>
<td class="LineOfCaller">99</td>
<td class="Message">XNIO version 3.3.6.Final</td>
</tr>

<tr class="info odd">
<td class="Date">15:28:20.100</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.xnio.nio</td>
<td class="LineOfCaller">55</td>
<td class="Message">XNIO NIO Implementation Version 3.3.6.Final</td>
</tr>

<tr class="warn even">
<td class="Date">15:28:20.602</td>
<td class="Thread">main</td>
<td class="Level">WARN</td>
<td class="Logger">io.undertow.websockets.jsr</td>
<td class="LineOfCaller">67</td>
<td class="Message">UT026009: XNIO worker was not set on WebSocketDeploymentInfo, the default worker will be used</td>
</tr>

<tr class="warn odd">
<td class="Date">15:28:20.605</td>
<td class="Thread">main</td>
<td class="Level">WARN</td>
<td class="Logger">io.undertow.websockets.jsr</td>
<td class="LineOfCaller">76</td>
<td class="Message">UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used</td>
</tr>

<tr class="info even">
<td class="Date">15:28:20.771</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">io.undertow.servlet</td>
<td class="LineOfCaller">360</td>
<td class="Message">Initializing Spring embedded WebApplicationContext</td>
</tr>

<tr class="info odd">
<td class="Date">15:28:20.773</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.web.context.ContextLoader</td>
<td class="LineOfCaller">276</td>
<td class="Message">Root WebApplicationContext: initialization completed in 15543 ms</td>
</tr>

<tr class="warn even">
<td class="Date">15:28:21.662</td>
<td class="Thread">main</td>
<td class="Level">WARN</td>
<td class="Logger">org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor</td>
<td class="LineOfCaller">427</td>
<td class="Message">The @ConfigurationProperties bean class org.apache.cxf.spring.boot.autoconfigure.CxfProperties contains validation constraints but had not been annotated with @Validated.</td>
</tr>

<tr class="warn odd">
<td class="Date">15:28:21.732</td>
<td class="Thread">main</td>
<td class="Level">WARN</td>
<td class="Logger">org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor</td>
<td class="LineOfCaller">427</td>
<td class="Message">The @ConfigurationProperties bean class org.apache.cxf.spring.boot.autoconfigure.CxfProperties contains validation constraints but had not been annotated with @Validated.</td>
</tr>

<tr class="warn even">
<td class="Date">15:28:21.765</td>
<td class="Thread">main</td>
<td class="Level">WARN</td>
<td class="Logger">org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor</td>
<td class="LineOfCaller">427</td>
<td class="Message">The @ConfigurationProperties bean class org.apache.cxf.spring.boot.autoconfigure.CxfProperties contains validation constraints but had not been annotated with @Validated.</td>
</tr>

<tr class="info odd">
<td class="Date">15:28:25.294</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.boot.web.servlet.ServletRegistrationBean</td>
<td class="LineOfCaller">190</td>
<td class="Message">Mapping servlet: &#39;dispatcherServlet&#39; to [/]</td>
</tr>

<tr class="info even">
<td class="Date">15:28:25.404</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.boot.web.servlet.ServletRegistrationBean</td>
<td class="LineOfCaller">190</td>
<td class="Message">Mapping servlet: &#39;CXFServlet&#39; to [/fxf/*]</td>
</tr>

<tr class="info odd">
<td class="Date">15:28:25.415</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.boot.web.servlet.FilterRegistrationBean</td>
<td class="LineOfCaller">258</td>
<td class="Message">Mapping filter: &#39;metricsFilter&#39; to: [/*]</td>
</tr>

<tr class="info even">
<td class="Date">15:28:25.517</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.boot.web.servlet.FilterRegistrationBean</td>
<td class="LineOfCaller">258</td>
<td class="Message">Mapping filter: &#39;characterEncodingFilter&#39; to: [/*]</td>
</tr>

<tr class="info odd">
<td class="Date">15:28:25.530</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.boot.web.servlet.FilterRegistrationBean</td>
<td class="LineOfCaller">258</td>
<td class="Message">Mapping filter: &#39;hiddenHttpMethodFilter&#39; to: [/*]</td>
</tr>

<tr class="info even">
<td class="Date">15:28:25.651</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.boot.web.servlet.FilterRegistrationBean</td>
<td class="LineOfCaller">258</td>
<td class="Message">Mapping filter: &#39;httpPutFormContentFilter&#39; to: [/*]</td>
</tr>

<tr class="info odd">
<td class="Date">15:28:25.653</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.boot.web.servlet.FilterRegistrationBean</td>
<td class="LineOfCaller">258</td>
<td class="Message">Mapping filter: &#39;requestContextFilter&#39; to: [/*]</td>
</tr>

<tr class="info even">
<td class="Date">15:28:25.812</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.boot.web.servlet.FilterRegistrationBean</td>
<td class="LineOfCaller">258</td>
<td class="Message">Mapping filter: &#39;webRequestLoggingFilter&#39; to: [/*]</td>
</tr>

<tr class="info odd">
<td class="Date">15:28:25.937</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.boot.web.servlet.FilterRegistrationBean</td>
<td class="LineOfCaller">258</td>
<td class="Message">Mapping filter: &#39;applicationContextIdFilter&#39; to: [/*]</td>
</tr>

<tr class="info even">
<td class="Date">15:28:38.694</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.apache.camel.core.xml.AbstractCamelContextFactoryBean</td>
<td class="LineOfCaller">931</td>
<td class="Message">Using custom default ThreadPoolProfile with id: changedProfile and implementation: org.apache.camel.model.ThreadPoolProfileDefinition@4c654cd0</td>
</tr>

<tr class="info odd">
<td class="Date">15:28:39.237</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.apache.camel.impl.converter.DefaultTypeConverter</td>
<td class="LineOfCaller">56</td>
<td class="Message">Loaded 221 type converters</td>
</tr>

<tr class="info even">
<td class="Date">15:28:39.250</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.apache.camel.impl.DefaultExecutorServiceManager</td>
<td class="LineOfCaller">119</td>
<td class="Message">Using custom DefaultThreadPoolProfile: ThreadPoolProfile[changedProfile (true) size:1-20, keepAlive: 60 SECONDS, maxQueue: 100, allowCoreThreadTimeOut:false, rejectedPolicy:CallerRuns]</td>
</tr>

<tr class="info odd">
<td class="Date">15:28:49.002</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter</td>
<td class="LineOfCaller">534</td>
<td class="Message">Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@45e61007: startup date [Tue Oct 29 15:28:05 COT 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@5f2a64da</td>
</tr>

<tr class="info even">
<td class="Date">15:28:50.029</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping</td>
<td class="LineOfCaller">543</td>
<td class="Message">Mapped &quot;{[/error]}&quot; onto public org.springframework.http.ResponseEntity&lt;java.util.Map&lt;java.lang.String, java.lang.Object&gt;&gt; org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)</td>
</tr>

<tr class="info odd">
<td class="Date">15:28:50.043</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping</td>
<td class="LineOfCaller">543</td>
<td class="Message">Mapped &quot;{[/error],produces=[text/html]}&quot; onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)</td>
</tr>

<tr class="info even">
<td class="Date">15:28:50.328</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.web.servlet.handler.SimpleUrlHandlerMapping</td>
<td class="LineOfCaller">362</td>
<td class="Message">Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]</td>
</tr>

<tr class="info odd">
<td class="Date">15:28:50.331</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.web.servlet.handler.SimpleUrlHandlerMapping</td>
<td class="LineOfCaller">362</td>
<td class="Message">Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]</td>
</tr>

<tr class="info even">
<td class="Date">15:28:50.621</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.web.servlet.handler.SimpleUrlHandlerMapping</td>
<td class="LineOfCaller">362</td>
<td class="Message">Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]</td>
</tr>

<tr class="warn odd">
<td class="Date">15:28:52.237</td>
<td class="Thread">OkHttp https://kubernetes.default.svc/...</td>
<td class="Level">WARN</td>
<td class="Logger">io.fabric8.kubernetes.client.dsl.internal.WatchConnectionManager</td>
<td class="LineOfCaller">192</td>
<td class="Message">Exec Failure</td>
</tr>
<tr><td class="Exception" colspan="6">java.net.UnknownHostException: kubernetes.default.svc
<br />&nbsp;&nbsp;&nbsp;&nbsp;at java.net.Inet6AddressImpl.lookupAllHostAddr(Native Method)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at java.net.InetAddress$2.lookupAllHostAddr(InetAddress.java:929)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1324)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at java.net.InetAddress.getAllByName0(InetAddress.java:1277)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at java.net.InetAddress.getAllByName(InetAddress.java:1193)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at java.net.InetAddress.getAllByName(InetAddress.java:1127)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at okhttp3.Dns$1.lookup(Dns.java:39)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at okhttp3.internal.connection.RouteSelector.resetNextInetSocketAddress(RouteSelector.java:171)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at okhttp3.internal.connection.RouteSelector.nextProxy(RouteSelector.java:137)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at okhttp3.internal.connection.RouteSelector.next(RouteSelector.java:82)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at okhttp3.internal.connection.StreamAllocation.findConnection(StreamAllocation.java:171)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at okhttp3.internal.connection.StreamAllocation.findHealthyConnection(StreamAllocation.java:121)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at okhttp3.internal.connection.StreamAllocation.newStream(StreamAllocation.java:100)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.java:42)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:92)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:67)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.java:93)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:92)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:67)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.java:93)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:92)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:120)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:92)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:67)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at io.fabric8.kubernetes.client.utils.HttpClientUtils$2.intercept(HttpClientUtils.java:95)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:92)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:67)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:185)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at okhttp3.RealCall$AsyncCall.execute(RealCall.java:135)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at okhttp3.internal.NamedRunnable.run(NamedRunnable.java:32)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at java.lang.Thread.run(Thread.java:748)
</td></tr>
<tr class="error even">
<td class="Date">15:28:52.247</td>
<td class="Thread">main</td>
<td class="Level">ERROR</td>
<td class="Logger">io.fabric8.spring.cloud.kubernetes.reload.EventBasedConfigurationChangeDetector</td>
<td class="LineOfCaller">83</td>
<td class="Message">Error while establishing a connection to watch config maps: configuration may remain stale</td>
</tr>
<tr><td class="Exception" colspan="6">io.fabric8.kubernetes.client.KubernetesClientException: Failed to start websocket
<br />&nbsp;&nbsp;&nbsp;&nbsp;at io.fabric8.kubernetes.client.dsl.internal.WatchConnectionManager$2.onFailure(WatchConnectionManager.java:194)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at okhttp3.internal.ws.RealWebSocket.failWebSocket(RealWebSocket.java:543)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at okhttp3.internal.ws.RealWebSocket$2.onFailure(RealWebSocket.java:208)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at okhttp3.RealCall$AsyncCall.execute(RealCall.java:148)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at okhttp3.internal.NamedRunnable.run(NamedRunnable.java:32)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at java.lang.Thread.run(Thread.java:748)
<br />Caused by: java.net.UnknownHostException: kubernetes.default.svc
<br />&nbsp;&nbsp;&nbsp;&nbsp;at java.net.Inet6AddressImpl.lookupAllHostAddr(Native Method)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at java.net.InetAddress$2.lookupAllHostAddr(InetAddress.java:929)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1324)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at java.net.InetAddress.getAllByName0(InetAddress.java:1277)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at java.net.InetAddress.getAllByName(InetAddress.java:1193)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at java.net.InetAddress.getAllByName(InetAddress.java:1127)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at okhttp3.Dns$1.lookup(Dns.java:39)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at okhttp3.internal.connection.RouteSelector.resetNextInetSocketAddress(RouteSelector.java:171)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at okhttp3.internal.connection.RouteSelector.nextProxy(RouteSelector.java:137)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at okhttp3.internal.connection.RouteSelector.next(RouteSelector.java:82)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at okhttp3.internal.connection.StreamAllocation.findConnection(StreamAllocation.java:171)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at okhttp3.internal.connection.StreamAllocation.findHealthyConnection(StreamAllocation.java:121)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at okhttp3.internal.connection.StreamAllocation.newStream(StreamAllocation.java:100)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.java:42)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:92)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:67)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.java:93)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:92)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:67)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.java:93)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:92)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:120)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:92)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:67)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at io.fabric8.kubernetes.client.utils.HttpClientUtils$2.intercept(HttpClientUtils.java:95)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:92)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:67)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:185)
<br />&nbsp;&nbsp;&nbsp;&nbsp;at okhttp3.RealCall$AsyncCall.execute(RealCall.java:135)
<br />&nbsp;&nbsp;&nbsp;&nbsp;	... 4 common frames omitted
</td></tr>
<tr class="info odd">
<td class="Date">15:29:04.385</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping</td>
<td class="LineOfCaller">543</td>
<td class="Message">Mapped &quot;{[/pause || /pause.json],methods=[POST]}&quot; onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()</td>
</tr>

<tr class="info even">
<td class="Date">15:29:04.400</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping</td>
<td class="LineOfCaller">543</td>
<td class="Message">Mapped &quot;{[/env],methods=[POST]}&quot; onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map&lt;java.lang.String, java.lang.String&gt;)</td>
</tr>

<tr class="info odd">
<td class="Date">15:29:04.403</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping</td>
<td class="LineOfCaller">543</td>
<td class="Message">Mapped &quot;{[/env/reset],methods=[POST]}&quot; onto public java.util.Map&lt;java.lang.String, java.lang.Object&gt; org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()</td>
</tr>

<tr class="info even">
<td class="Date">15:29:04.416</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping</td>
<td class="LineOfCaller">543</td>
<td class="Message">Mapped &quot;{[/resume || /resume.json],methods=[POST]}&quot; onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()</td>
</tr>

<tr class="info odd">
<td class="Date">15:29:04.426</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping</td>
<td class="LineOfCaller">543</td>
<td class="Message">Mapped &quot;{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}&quot; onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()</td>
</tr>

<tr class="info even">
<td class="Date">15:29:04.445</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping</td>
<td class="LineOfCaller">543</td>
<td class="Message">Mapped &quot;{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}&quot; onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)</td>
</tr>

<tr class="info odd">
<td class="Date">15:29:04.448</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping</td>
<td class="LineOfCaller">543</td>
<td class="Message">Mapped &quot;{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}&quot; onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()</td>
</tr>

<tr class="info even">
<td class="Date">15:29:04.454</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping</td>
<td class="LineOfCaller">543</td>
<td class="Message">Mapped &quot;{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}&quot; onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)</td>
</tr>

<tr class="info odd">
<td class="Date">15:29:04.456</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping</td>
<td class="LineOfCaller">543</td>
<td class="Message">Mapped &quot;{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}&quot; onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()</td>
</tr>

<tr class="info even">
<td class="Date">15:29:04.504</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping</td>
<td class="LineOfCaller">543</td>
<td class="Message">Mapped &quot;{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}&quot; onto public org.springframework.http.ResponseEntity&lt;?&gt; org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)</td>
</tr>

<tr class="info odd">
<td class="Date">15:29:04.511</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping</td>
<td class="LineOfCaller">543</td>
<td class="Message">Mapped &quot;{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}&quot; onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()</td>
</tr>

<tr class="info even">
<td class="Date">15:29:04.515</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping</td>
<td class="LineOfCaller">543</td>
<td class="Message">Mapped &quot;{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}&quot; onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()</td>
</tr>

<tr class="info odd">
<td class="Date">15:29:04.531</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping</td>
<td class="LineOfCaller">543</td>
<td class="Message">Mapped &quot;{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}&quot; onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()</td>
</tr>

<tr class="info even">
<td class="Date">15:29:04.537</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping</td>
<td class="LineOfCaller">543</td>
<td class="Message">Mapped &quot;{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}&quot; onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()</td>
</tr>

<tr class="info odd">
<td class="Date">15:29:04.542</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping</td>
<td class="LineOfCaller">543</td>
<td class="Message">Mapped &quot;{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}&quot; onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)</td>
</tr>

<tr class="info even">
<td class="Date">15:29:04.548</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping</td>
<td class="LineOfCaller">543</td>
<td class="Message">Mapped &quot;{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}&quot; onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()</td>
</tr>

<tr class="info odd">
<td class="Date">15:29:04.576</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping</td>
<td class="LineOfCaller">543</td>
<td class="Message">Mapped &quot;{[/restart || /restart.json],methods=[POST]}&quot; onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()</td>
</tr>

<tr class="info even">
<td class="Date">15:29:04.587</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping</td>
<td class="LineOfCaller">543</td>
<td class="Message">Mapped &quot;{[/refresh || /refresh.json],methods=[POST]}&quot; onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()</td>
</tr>

<tr class="info odd">
<td class="Date">15:29:04.647</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping</td>
<td class="LineOfCaller">543</td>
<td class="Message">Mapped &quot;{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}&quot; onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()</td>
</tr>

<tr class="info even">
<td class="Date">15:29:04.655</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping</td>
<td class="LineOfCaller">543</td>
<td class="Message">Mapped &quot;{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}&quot; onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException</td>
</tr>

<tr class="info odd">
<td class="Date">15:29:04.665</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping</td>
<td class="LineOfCaller">543</td>
<td class="Message">Mapped &quot;{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}&quot; onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)</td>
</tr>

<tr class="info even">
<td class="Date">15:29:04.668</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping</td>
<td class="LineOfCaller">543</td>
<td class="Message">Mapped &quot;{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}&quot; onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map&lt;java.lang.String, java.lang.String&gt;)</td>
</tr>

<tr class="info odd">
<td class="Date">15:29:04.672</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping</td>
<td class="LineOfCaller">543</td>
<td class="Message">Mapped &quot;{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}&quot; onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()</td>
</tr>

<tr class="info even">
<td class="Date">15:29:07.901</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.jmx.export.annotation.AnnotationMBeanExporter</td>
<td class="LineOfCaller">431</td>
<td class="Message">Registering beans for JMX exposure on startup</td>
</tr>

<tr class="info odd">
<td class="Date">15:29:07.962</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.jmx.export.annotation.AnnotationMBeanExporter</td>
<td class="LineOfCaller">916</td>
<td class="Message">Bean with name &#39;configurationPropertiesRebinder&#39; has been autodetected for JMX exposure</td>
</tr>

<tr class="info even">
<td class="Date">15:29:08.007</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.jmx.export.annotation.AnnotationMBeanExporter</td>
<td class="LineOfCaller">916</td>
<td class="Message">Bean with name &#39;refreshEndpoint&#39; has been autodetected for JMX exposure</td>
</tr>

<tr class="info odd">
<td class="Date">15:29:08.010</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.jmx.export.annotation.AnnotationMBeanExporter</td>
<td class="LineOfCaller">916</td>
<td class="Message">Bean with name &#39;restartEndpoint&#39; has been autodetected for JMX exposure</td>
</tr>

<tr class="info even">
<td class="Date">15:29:08.013</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.jmx.export.annotation.AnnotationMBeanExporter</td>
<td class="LineOfCaller">916</td>
<td class="Message">Bean with name &#39;refreshScope&#39; has been autodetected for JMX exposure</td>
</tr>

<tr class="info odd">
<td class="Date">15:29:08.017</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.jmx.export.annotation.AnnotationMBeanExporter</td>
<td class="LineOfCaller">916</td>
<td class="Message">Bean with name &#39;environmentManager&#39; has been autodetected for JMX exposure</td>
</tr>

<tr class="info even">
<td class="Date">15:29:08.031</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.jmx.export.annotation.AnnotationMBeanExporter</td>
<td class="LineOfCaller">678</td>
<td class="Message">Located managed bean &#39;environmentManager&#39;: registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]</td>
</tr>

<tr class="info odd">
<td class="Date">15:29:08.129</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.jmx.export.annotation.AnnotationMBeanExporter</td>
<td class="LineOfCaller">678</td>
<td class="Message">Located managed bean &#39;restartEndpoint&#39;: registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]</td>
</tr>

<tr class="info even">
<td class="Date">15:29:08.201</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.jmx.export.annotation.AnnotationMBeanExporter</td>
<td class="LineOfCaller">678</td>
<td class="Message">Located managed bean &#39;refreshScope&#39;: registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]</td>
</tr>

<tr class="info odd">
<td class="Date">15:29:08.332</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.jmx.export.annotation.AnnotationMBeanExporter</td>
<td class="LineOfCaller">678</td>
<td class="Message">Located managed bean &#39;configurationPropertiesRebinder&#39;: registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=45e61007,type=ConfigurationPropertiesRebinder]</td>
</tr>

<tr class="info even">
<td class="Date">15:29:08.403</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.jmx.export.annotation.AnnotationMBeanExporter</td>
<td class="LineOfCaller">678</td>
<td class="Message">Located managed bean &#39;refreshEndpoint&#39;: registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]</td>
</tr>

<tr class="info odd">
<td class="Date">15:29:08.411</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter</td>
<td class="LineOfCaller">431</td>
<td class="Message">Registering beans for JMX exposure on startup</td>
</tr>

<tr class="warn even">
<td class="Date">15:29:09.322</td>
<td class="Thread">main</td>
<td class="Level">WARN</td>
<td class="Logger">org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor</td>
<td class="LineOfCaller">427</td>
<td class="Message">The @ConfigurationProperties bean class org.apache.cxf.spring.boot.autoconfigure.CxfProperties contains validation constraints but had not been annotated with @Validated.</td>
</tr>

<tr class="warn odd">
<td class="Date">15:29:09.328</td>
<td class="Thread">main</td>
<td class="Level">WARN</td>
<td class="Logger">org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor</td>
<td class="LineOfCaller">427</td>
<td class="Message">The @ConfigurationProperties bean class org.apache.cxf.spring.boot.autoconfigure.CxfProperties contains validation constraints but had not been annotated with @Validated.</td>
</tr>

<tr class="warn even">
<td class="Date">15:29:09.363</td>
<td class="Thread">main</td>
<td class="Level">WARN</td>
<td class="Logger">org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor</td>
<td class="LineOfCaller">427</td>
<td class="Message">The @ConfigurationProperties bean class org.apache.cxf.spring.boot.autoconfigure.CxfProperties contains validation constraints but had not been annotated with @Validated.</td>
</tr>

<tr class="warn odd">
<td class="Date">15:29:09.369</td>
<td class="Thread">main</td>
<td class="Level">WARN</td>
<td class="Logger">org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor</td>
<td class="LineOfCaller">427</td>
<td class="Message">The @ConfigurationProperties bean class org.apache.cxf.spring.boot.autoconfigure.CxfProperties contains validation constraints but had not been annotated with @Validated.</td>
</tr>

<tr class="warn even">
<td class="Date">15:29:09.370</td>
<td class="Thread">main</td>
<td class="Level">WARN</td>
<td class="Logger">org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor</td>
<td class="LineOfCaller">427</td>
<td class="Message">The @ConfigurationProperties bean class org.apache.cxf.spring.boot.autoconfigure.CxfProperties contains validation constraints but had not been annotated with @Validated.</td>
</tr>

<tr class="warn odd">
<td class="Date">15:29:09.371</td>
<td class="Thread">main</td>
<td class="Level">WARN</td>
<td class="Logger">org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor</td>
<td class="LineOfCaller">427</td>
<td class="Message">The @ConfigurationProperties bean class org.apache.cxf.spring.boot.autoconfigure.CxfProperties contains validation constraints but had not been annotated with @Validated.</td>
</tr>

<tr class="info even">
<td class="Date">15:29:11.146</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.context.support.DefaultLifecycleProcessor</td>
<td class="LineOfCaller">343</td>
<td class="Message">Starting beans in phase 0</td>
</tr>

<tr class="info odd">
<td class="Date">15:29:11.157</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter</td>
<td class="LineOfCaller">678</td>
<td class="Message">Located managed bean &#39;auditEventsEndpoint&#39;: registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]</td>
</tr>

<tr class="info even">
<td class="Date">15:29:11.196</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter</td>
<td class="LineOfCaller">678</td>
<td class="Message">Located managed bean &#39;requestMappingEndpoint&#39;: registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]</td>
</tr>

<tr class="info odd">
<td class="Date">15:29:11.249</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter</td>
<td class="LineOfCaller">678</td>
<td class="Message">Located managed bean &#39;environmentEndpoint&#39;: registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]</td>
</tr>

<tr class="info even">
<td class="Date">15:29:11.327</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter</td>
<td class="LineOfCaller">678</td>
<td class="Message">Located managed bean &#39;healthEndpoint&#39;: registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]</td>
</tr>

<tr class="info odd">
<td class="Date">15:29:11.394</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter</td>
<td class="LineOfCaller">678</td>
<td class="Message">Located managed bean &#39;beansEndpoint&#39;: registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]</td>
</tr>

<tr class="info even">
<td class="Date">15:29:11.407</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter</td>
<td class="LineOfCaller">678</td>
<td class="Message">Located managed bean &#39;infoEndpoint&#39;: registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]</td>
</tr>

<tr class="info odd">
<td class="Date">15:29:11.417</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter</td>
<td class="LineOfCaller">678</td>
<td class="Message">Located managed bean &#39;loggersEndpoint&#39;: registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]</td>
</tr>

<tr class="info even">
<td class="Date">15:29:11.539</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter</td>
<td class="LineOfCaller">678</td>
<td class="Message">Located managed bean &#39;metricsEndpoint&#39;: registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]</td>
</tr>

<tr class="info odd">
<td class="Date">15:29:11.562</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter</td>
<td class="LineOfCaller">678</td>
<td class="Message">Located managed bean &#39;traceEndpoint&#39;: registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]</td>
</tr>

<tr class="info even">
<td class="Date">15:29:11.582</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter</td>
<td class="LineOfCaller">678</td>
<td class="Message">Located managed bean &#39;dumpEndpoint&#39;: registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]</td>
</tr>

<tr class="info odd">
<td class="Date">15:29:11.595</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter</td>
<td class="LineOfCaller">678</td>
<td class="Message">Located managed bean &#39;autoConfigurationReportEndpoint&#39;: registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]</td>
</tr>

<tr class="info even">
<td class="Date">15:29:11.637</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter</td>
<td class="LineOfCaller">678</td>
<td class="Message">Located managed bean &#39;configurationPropertiesReportEndpoint&#39;: registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]</td>
</tr>

<tr class="info odd">
<td class="Date">15:29:11.648</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.context.support.DefaultLifecycleProcessor</td>
<td class="LineOfCaller">343</td>
<td class="Message">Starting beans in phase 2147483647</td>
</tr>

<tr class="info even">
<td class="Date">15:29:11.980</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.apache.camel.spring.boot.RoutesCollector</td>
<td class="LineOfCaller">210</td>
<td class="Message">Loading additional Camel XML routes from: classpath:camel/*.xml</td>
</tr>

<tr class="info odd">
<td class="Date">15:29:11.983</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.apache.camel.spring.boot.RoutesCollector</td>
<td class="LineOfCaller">224</td>
<td class="Message">Loading additional Camel XML rests from: classpath:camel-rest/*.xml</td>
</tr>

<tr class="info even">
<td class="Date">15:29:11.994</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.apache.camel.spring.boot.RoutesCollector</td>
<td class="LineOfCaller">142</td>
<td class="Message">Starting CamelMainRunController to ensure the main thread keeps running</td>
</tr>

<tr class="info odd">
<td class="Date">15:29:12.009</td>
<td class="Thread">CamelMainRunController</td>
<td class="Level">INFO</td>
<td class="Logger">org.apache.camel.spring.SpringCamelContext</td>
<td class="LineOfCaller">3007</td>
<td class="Message">Apache Camel 2.19.1 (CamelContext: CXF-SERVICE-SALDOPAGOS-API) is starting</td>
</tr>

<tr class="info even">
<td class="Date">15:29:12.014</td>
<td class="Thread">CamelMainRunController</td>
<td class="Level">INFO</td>
<td class="Logger">org.apache.camel.spring.SpringCamelContext</td>
<td class="LineOfCaller">3147</td>
<td class="Message">StreamCaching is enabled on CamelContext: CXF-SERVICE-SALDOPAGOS-API</td>
</tr>

<tr class="info odd">
<td class="Date">15:29:12.016</td>
<td class="Thread">CamelMainRunController</td>
<td class="Level">INFO</td>
<td class="Logger">org.apache.camel.management.ManagedManagementStrategy</td>
<td class="LineOfCaller">192</td>
<td class="Message">JMX is enabled</td>
</tr>

<tr class="info even">
<td class="Date">15:29:12.434</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer</td>
<td class="LineOfCaller">160</td>
<td class="Message">Undertow started on port(s) 8080 (http)</td>
</tr>

<tr class="info odd">
<td class="Date">15:29:12.471</td>
<td class="Thread">main</td>
<td class="Level">INFO</td>
<td class="Logger">co.com.entelgy.Application</td>
<td class="LineOfCaller">57</td>
<td class="Message">Started Application in 75.186 seconds (JVM running for 102.748)</td>
</tr>

<tr class="info even">
<td class="Date">15:29:12.845</td>
<td class="Thread">CamelMainRunController</td>
<td class="Level">INFO</td>
<td class="Logger">org.apache.camel.impl.DefaultRuntimeEndpointRegistry</td>
<td class="LineOfCaller">203</td>
<td class="Message">Runtime endpoint registry is in extended mode gathering usage statistics of all incoming and outgoing endpoints (cache limit: 1000)</td>
</tr>

<tr class="info odd">
<td class="Date">15:29:17.091</td>
<td class="Thread">CamelMainRunController</td>
<td class="Level">INFO</td>
<td class="Logger">org.apache.camel.component.http4.HttpComponent</td>
<td class="LineOfCaller">371</td>
<td class="Message">Created ClientConnectionManager org.apache.http.impl.conn.PoolingHttpClientConnectionManager@e5dd245</td>
</tr>

<tr class="info even">
<td class="Date">15:29:18.615</td>
<td class="Thread">CamelMainRunController</td>
<td class="Level">INFO</td>
<td class="Logger">org.apache.camel.impl.DefaultStreamCachingStrategy</td>
<td class="LineOfCaller">316</td>
<td class="Message">StreamCaching in use with spool directory: C:\Users\maico\AppData\Local\Temp\camel\camel-tmp-515d9996-f771-4e51-bd5a-66501b7dda33 and rules: [Spool &gt; 128K body size]</td>
</tr>

<tr class="info odd">
<td class="Date">15:29:19.417</td>
<td class="Thread">CamelMainRunController</td>
<td class="Level">INFO</td>
<td class="Logger">org.apache.cxf.endpoint.ServerImpl</td>
<td class="LineOfCaller">85</td>
<td class="Message">Setting the server&#39;s publish address to be /saldoEncargos</td>
</tr>

<tr class="info even">
<td class="Date">15:29:21.247</td>
<td class="Thread">CamelMainRunController</td>
<td class="Level">INFO</td>
<td class="Logger">org.apache.camel.spring.SpringCamelContext</td>
<td class="LineOfCaller">3836</td>
<td class="Message">Route: SALDOENCARGOS-ROUTE-MAIN started and consuming from: cxfrs://bean:restApiEnpoint?bindingStyle=SimpleConsumer</td>
</tr>

<tr class="info odd">
<td class="Date">15:29:22.320</td>
<td class="Thread">CamelMainRunController</td>
<td class="Level">INFO</td>
<td class="Logger">org.apache.camel.spring.SpringCamelContext</td>
<td class="LineOfCaller">3836</td>
<td class="Message">Route: JMS-ROUTE-MAIN started and consuming from: jms://valSaldoEncargoJMS</td>
</tr>

<tr class="info even">
<td class="Date">15:29:22.328</td>
<td class="Thread">CamelMainRunController</td>
<td class="Level">INFO</td>
<td class="Logger">org.apache.camel.spring.SpringCamelContext</td>
<td class="LineOfCaller">3836</td>
<td class="Message">Route: CONSULTA-DATOS started and consuming from: direct://validacionSaldo</td>
</tr>

<tr class="info odd">
<td class="Date">15:29:22.464</td>
<td class="Thread">CamelMainRunController</td>
<td class="Level">INFO</td>
<td class="Logger">org.apache.camel.spring.SpringCamelContext</td>
<td class="LineOfCaller">3836</td>
<td class="Message">Route: RT-RESPUESTA-VALIDAR-SALDO started and consuming from: direct://responseValidaSaldo</td>
</tr>

<tr class="info even">
<td class="Date">15:29:22.468</td>
<td class="Thread">CamelMainRunController</td>
<td class="Level">INFO</td>
<td class="Logger">org.apache.camel.spring.SpringCamelContext</td>
<td class="LineOfCaller">3050</td>
<td class="Message">Total 4 routes, of which 4 are started.</td>
</tr>

<tr class="info odd">
<td class="Date">15:29:22.479</td>
<td class="Thread">CamelMainRunController</td>
<td class="Level">INFO</td>
<td class="Logger">org.apache.camel.spring.SpringCamelContext</td>
<td class="LineOfCaller">3051</td>
<td class="Message">Apache Camel 2.19.1 (CamelContext: CXF-SERVICE-SALDOPAGOS-API) started in 10.461 seconds</td>
</tr>
