<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:camel="http://camel.apache.org/schema/spring"
    xmlns:ctx="http://www.springframework.org/schema/context"
    xmlns:cxf="http://camel.apache.org/schema/cxf"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd        http://camel.apache.org/schema/spring        http://camel.apache.org/schema/spring/camel-spring.xsd  http://camel.apache.org/schema/cxf http://camel.apache.org/schema/cxf/camel-cxf-2.8.3.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
    <bean class="com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider" id="jsonProvider"/>
    <bean class="co.com.entelgy.exceptions.ErrorExcepcionInterceptor" id="ErrorExcepcionInterceptor"/>
    <bean class="co.com.entelgy.processor.RespuestaErrorProcessor" id="respuestaErrorProcessor"/>
    <bean class="co.com.entelgy.processor.DescripcionResonseProcessor" id="descripcionResonseProcessor"/>
    <camel:errorHandler id="noErrorHandler" type="NoErrorHandler"/>
    <bean class="org.slf4j.LoggerFactory" factory-method="getLogger" id="rh1">
        <constructor-arg index="0" value="rh1"/>
    </bean>
    <bean class="co.com.entelgy.QuickstartConfiguration" id="prop"/>
    <ctx:property-placeholder location="classpath:application.properties"/>
    <bean class="org.apache.camel.component.jms.JmsComponent" id="jms">
        <property name="connectionFactory">
            <bean class="org.apache.activemq.ActiveMQConnectionFactory">
                <property name="brokerURL" value="${quickstart.urlBroker}"/>
                <property name="closeTimeout" value="${quickstart.TimeOutBroker}"/>
            </bean>
        </property>
    </bean>
    <bean class="org.apache.commons.dbcp.BasicDataSource"
        destroy-method="close" id="dataSource">
        <property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/>
        <property name="url" value="${quickstart.jdbcConnection_Oracle}"/>
        <property name="username" value="${quickstart.jdbcUserName_Oracle}"/>
        <property name="password" value="${quickstart.jdbcPassword_Oracle}"/>
    </bean>
    <cxf:rsServer address="{{quickstart.endpoint_CrearUnidad_Path}}"
        id="restApiEnpoint" serviceClass="co.com.entelgy.client.Client">
        <cxf:providers>
            <ref bean="jsonProvider"/>
        </cxf:providers>
        <cxf:outInterceptors>
            <ref bean="ErrorExcepcionInterceptor"/>
        </cxf:outInterceptors>
    </cxf:rsServer>
    <camelContext id="CXF-SERVICE-CREAR-UNIDAD-API" streamCache="true"
        threadNamePattern="100" xmlns="http://camel.apache.org/schema/spring">
        <propertyPlaceholder id="properties" location="classpath:application.properties"/>
        <threadPoolProfile defaultProfile="true" id="changedProfile"
            maxQueueSize="100" poolSize="1"/>
        <redeliveryPolicyProfile id="redeliveryPolicy"
            logRetryAttempted="true" maximumRedeliveries="0"
            redeliveryDelay="10" retriesExhaustedLogLevel="WARN"/>
        <onException id="CustomExceptionHandling"
            redeliveryPolicyRef="redeliveryPolicy" useOriginalMessage="true">
            <exception>org.apache.camel.component.bean.validator.BeanValidationException</exception>
            <handled>
                <constant>true</constant>
            </handled>
            <log loggerRef="rh1" loggingLevel="ERROR" message="ERROR: ${camelId} || ${routeId} || ${id} || ${date:now:yyyy-MM-dd'T'HH:mm:ss:SSS} || ${exception.message}"/>
            <log loggerRef="rh1" loggingLevel="DEBUG" message="ERROR: ${camelId} || ${routeId} || ${id} || ${date:now:yyyy-MM-dd'T'HH:mm:ss:SSS} || ${exception.stacktrace}"/>
            <setHeader headerName="trazaerror">
                <simple>${exception.stacktrace}</simple>
            </setHeader>
            <setProperty propertyName="codigohttp">
                <simple>{{quickstart.codigoRespuesta_ErrorGeneral}}</simple>
            </setProperty>
            <setProperty propertyName="codigo">
                <simple>{{quickstart.codigo_ErrorEstructura}}</simple>
            </setProperty>
            <setProperty propertyName="descripcion">
                <simple>{{quickstart.descripcion_ErrorEstructura}}</simple>
            </setProperty>
            <marshal>
                <json library="Jackson"/>
            </marshal>
            <convertBodyTo type="String"/>
            <setProperty propertyName="RequestBody">
                <simple>${body}</simple>
            </setProperty>
            <bean method="process" ref="respuestaErrorProcessor"/>
            <setProperty propertyName="nombreProyecto">
                <simple>{{camel.springboot.name}}</simple>
            </setProperty>
            <setProperty propertyName="fechaSistema">
                <simple>${date:now:yyyy-MM-dd'T'HH:mm:ss:SSS}</simple>
            </setProperty>
            <to uri="velocity:template/ResponseBroker.vm"/>
            <log message="((((${body}))))"/>
            <setHeader headerName="Content-Type">
                <constant>application/json</constant>
            </setHeader>
            <setHeader headerName="CamelHttpMethod">
                <constant>POST</constant>
            </setHeader>
            <wireTap uri="http4://{{quickstart.urlElasticSearch}}?bridgeEndpoint=true&amp;throwExceptionOnFailure=false"/>
            <to uri="velocity:template/ResponseError.vm"/>
            <stop/>
        </onException>
        <onException id="CustomExceptionHandling"
            redeliveryPolicyRef="redeliveryPolicy" useOriginalMessage="true">
            <exception>co.com.entelgy.exceptions.ProcedureExcepcion</exception>
            <handled>
                <constant>true</constant>
            </handled>
            <log loggerRef="rh1" loggingLevel="ERROR" message="ERROR: ${camelId} || ${routeId} || ${id} || ${date:now:yyyy-MM-dd'T'HH:mm:ss:SSS} || ${exception.message}"/>
            <log loggerRef="rh1" loggingLevel="DEBUG" message="ERROR: ${camelId} || ${routeId} || ${id} || ${date:now:yyyy-MM-dd'T'HH:mm:ss:SSS} || ${exception.stacktrace}"/>
            <setHeader headerName="trazaerror">
                <simple>${exception.stacktrace}</simple>
            </setHeader>
            <setProperty propertyName="codigohttp">
                <simple>{{quickstart.codigoRespuesta_ErrorGeneral}}</simple>
            </setProperty>
            <setProperty propertyName="codigo">
                <simple>{{quickstart.codigo_ErrorProcedure}}</simple>
            </setProperty>
            <setProperty propertyName="descripcion">
                <simple>{{quickstart.descripcion_ErrorProcedure}}</simple>
            </setProperty>
            <bean method="process" ref="respuestaErrorProcessor"/>
            <stop/>
        </onException>
        <onException>
            <exception>oracle.jdbc.OracleDatabaseException</exception>
            <handled>
                <constant>true</constant>
            </handled>
            <log loggerRef="rh1" loggingLevel="ERROR" message="ERROR: ${camelId} || ${routeId} || ${id} || ${date:now:yyyy-MM-dd'T'HH:mm:ss:SSS} || ${exception.message}"/>
            <log loggerRef="rh1" loggingLevel="DEBUG" message="ERROR: ${camelId} || ${routeId} || ${id} || ${date:now:yyyy-MM-dd'T'HH:mm:ss:SSS} || ${exception.stacktrace}"/>
            <setProperty propertyName="error">
                <simple>${exception.message}</simple>
            </setProperty>
            <process ref="descripcionResonseProcessor"/>
            <setProperty propertyName="codigohttp">
                <simple>{{quickstart.codigoRespuesta_ErrorGeneral}}</simple>
            </setProperty>
            <setProperty propertyName="codigo">
                <simple>{{quickstart.codigo_ErrorProveedor}}</simple>
            </setProperty>
            <setProperty propertyName="codigoTimeout">
                <simple>{{quickstart.codigo_ErrorTimeOut}}</simple>
            </setProperty>
            <setProperty propertyName="descripcionTimeout">
                <simple>{{quickstart.descripcion_ErrorTimeOut}}</simple>
            </setProperty>
            <bean method="process" ref="respuestaErrorProcessor"/>
            <stop/>
        </onException>
        <onException id="CustomExceptionHandling"
            redeliveryPolicyRef="redeliveryPolicy" useOriginalMessage="true">
            <exception>java.sql.SQLRecoverableException</exception>
            <exception>org.springframework.jdbc.CannotGetJdbcConnectionException</exception>
            <exception>org.springframework.jdbc.BadSqlGrammarException</exception>
            <handled>
                <constant>true</constant>
            </handled>
            <log loggerRef="rh1" loggingLevel="ERROR" message="ERROR: ${camelId} || ${routeId} || ${id} || ${date:now:yyyy-MM-dd'T'HH:mm:ss:SSS} || ${exception.message}"/>
            <log loggerRef="rh1" loggingLevel="DEBUG" message="ERROR: ${camelId} || ${routeId} || ${id} || ${date:now:yyyy-MM-dd'T'HH:mm:ss:SSS} || ${exception.stacktrace}"/>
            <setHeader headerName="trazaerror">
                <simple>${exception.stacktrace}</simple>
            </setHeader>
            <setProperty propertyName="codigohttp">
                <simple>{{quickstart.codigoRespuesta_ErrorGeneral}}</simple>
            </setProperty>
            <setProperty propertyName="codigo">
                <simple>{{quickstart.codigo_ErrorProveedor}}</simple>
            </setProperty>
            <setProperty propertyName="descripcion">
                <simple>{{quickstart.descripcion_ErrorProveedor}}</simple>
            </setProperty>
            <setProperty propertyName="codigoTimeout">
                <simple>{{quickstart.codigo_ErrorTimeOut}}</simple>
            </setProperty>
            <setProperty propertyName="descripcionTimeout">
                <simple>{{quickstart.descripcion_ErrorTimeOut}}</simple>
            </setProperty>
            <bean method="process" ref="respuestaErrorProcessor"/>
            <stop/>
        </onException>
        <onException id="CustomExceptionHandling"
            redeliveryPolicyRef="redeliveryPolicy" useOriginalMessage="true">
            <exception>java.lang.Exception</exception>
            <handled>
                <constant>true</constant>
            </handled>
            <log loggerRef="rh1" loggingLevel="ERROR" message="ERROR: ${camelId} || ${routeId} || ${id} || ${date:now:yyyy-MM-dd'T'HH:mm:ss:SSS} || ${exception.message}"/>
            <log loggerRef="rh1" loggingLevel="DEBUG" message="ERROR: ${camelId} || ${routeId} || ${id} || ${date:now:yyyy-MM-dd'T'HH:mm:ss:SSS} || ${exception.stacktrace}"/>
            <setHeader headerName="trazaerror">
                <simple>${exception.stacktrace}</simple>
            </setHeader>
            <setProperty propertyName="codigohttp">
                <simple>{{quickstart.codigoRespuesta_ErrorGeneral}}</simple>
            </setProperty>
            <setProperty propertyName="codigo">
                <simple>{{quickstart.codigo_ErrorInterno}}</simple>
            </setProperty>
            <setProperty propertyName="descripcion">
                <simple>{{quickstart.descripcion_ErrorInterno}}</simple>
            </setProperty>
            <bean method="process" ref="respuestaErrorProcessor"/>
            <stop/>
        </onException>
        <route id="CREAR-UNIDAD-ROUTE-MAIN">
            <from id="_from1" uri="cxfrs:bean:restApiEnpoint?bindingStyle=SimpleConsumer"/>
            <to id="_to1" uri="bean-validator://x"/>
            <removeHeaders id="_removeHeaders1" pattern="CamelHttp*"/>
            <setHeader headerName="Content-Type" id="_setHeader1">
                <constant>application/json</constant>
            </setHeader>
            <toD id="_toD1" uri="direct:${header.operationName}"/>
        </route>
        <route id="RT-GET-NOMBRE-PROYECTO">
            <from id="_from5" uri="direct:nombreProyecto"/>
            <setBody id="_setBody1">
                <simple>{{camel.springboot.name}}</simple>
            </setBody>
        </route>
        <route id="JMS-ROUTE-MAIN">
            <from id="_from2" uri="jms:crearUnidadJMS"/>
            <setHeader headerName="tipoEntrada" id="_setHeader15">
                <simple>cola</simple>
            </setHeader>
            <unmarshal id="_unmarshal1">
                <json library="Jackson"/>
            </unmarshal>
            <setProperty id="_setProperty199" propertyName="moviApliOrig">
                <simple>${body.get('moviApliOrig')}</simple>
            </setProperty>
            <setProperty id="_setProperty3" propertyName="moviCiasOrig">
                <simple>${body.get('moviCiasOrig')}</simple>
            </setProperty>
            <setProperty id="_setProperty2" propertyName="moviCias">
                <simple>${body.get('moviCias')}</simple>
            </setProperty>
            <setProperty id="_setProperty9" propertyName="moviOficina">
                <simple>${body.get('moviOficina')}</simple>
            </setProperty>
            <setProperty id="_setProperty8" propertyName="moviNumero">
                <simple>${body.get('moviNumero')}</simple>
            </setProperty>
            <setProperty id="_setProperty7" propertyName="moviFpag">
                <simple>${body.get('moviFpag')}</simple>
            </setProperty>
            <setProperty id="_setProperty5" propertyName="moviDescripcion">
                <simple>${body.get('moviDescripcion')}</simple>
            </setProperty>
            <setProperty id="_setProperty11" propertyName="moviUsuaCrea">
                <simple>${body.get('moviUsuaCrea')}</simple>
            </setProperty>
            <setProperty id="_setProperty6" propertyName="moviFecha">
                <simple>${body.get('moviFecha')}</simple>
            </setProperty>
            <setProperty id="_setProperty12" propertyName="moviValor">
                <simple>${body.get('moviValor')}</simple>
            </setProperty>
            <to id="_to2" uri="velocity:template/RequestRest.vm"/>
            <setHeader headerName="Content-Type" id="_setHeader2">
                <constant>application/json</constant>
            </setHeader>
            <setHeader headerName="CamelHttpMethod" id="_setHeader3">
                <constant>POST</constant>
            </setHeader>
            <to id="_to3" pattern="InOut" uri="https4://{{quickstart.urlEndpoint_servie}}?{{quickstart.query_user_key}}={{quickstart.query_value}}&amp;bridgeEndpoint=true&amp;throwExceptionOnFailure=false"/>
            <log id="_log1" loggerRef="rh1" message="CONSUMIO HTTP (((${header.CamelHttpResponseCode})))"/>
            <convertBodyTo id="_convertBodyTo1" type="String"/>
        </route>
        <route id="CONSULTA-DATOS">
            <from id="_from3" uri="direct:crearUnidad"/>
            <setHeader headerName="moviApliOrig" id="_setHeader40">
                <simple>${body.getMoviApliOrig()}</simple>
            </setHeader>
            <setHeader headerName="moviCiasOrig" id="_setHeader6">
                <simple>${body.getMoviCiasOrig()}</simple>
            </setHeader>
            <setHeader headerName="moviCias" id="_setHeader5">
                <simple>${body.getMoviCias()}</simple>
            </setHeader>
            <setHeader headerName="moviOficina" id="_setHeader12">
                <simple>${body.getMoviOficina()}</simple>
            </setHeader>
            <setHeader headerName="moviNumero" id="_setHeader11">
                <simple>${body.getMoviNumero()}</simple>
            </setHeader>
            <setHeader headerName="moviFpag" id="_setHeader10">
                <simple>${body.getMoviFpag()}</simple>
            </setHeader>
            <setHeader headerName="moviDescripcion" id="_setHeader8">
                <simple>${body.getMoviDescripcion()}</simple>
            </setHeader>
            <setHeader headerName="moviUsuaCrea" id="_setHeader13">
                <simple>${body.getMoviUsuaCrea()}</simple>
            </setHeader>
            <setHeader headerName="moviFecha" id="_setHeader9">
                <simple>${body.getMoviFecha()}</simple>
            </setHeader>
            <setHeader headerName="moviValor" id="_setHeader14">
                <simple>${body.getMoviValor()}</simple>
            </setHeader>
            <to id="_to4" uri="sql-stored:classpath:sql/crearUnidad.sql?dataSource=#dataSource"/>
            <setProperty id="_setProperty15" propertyName="rNroComp">
                <simple>${body.get('rNroComp')}</simple>
            </setProperty>
            <setProperty id="_setProperty16" propertyName="vActRta">
                <simple>${body.get('vActRta')}</simple>
            </setProperty>
            <choice id="_choice1">
                <when id="_when1">
                    <simple>${property.vActRta} == '0'</simple>
                    <setProperty id="_setProperty17" propertyName="rActNeg">
                        <simple>0</simple>
                    </setProperty>
                    <to id="_to5" uri="direct:responseCrearUnidad"/>
                </when>
                <otherwise id="_otherwise1">
                    <choice id="_choice2">
                        <when id="_when2">
                            <simple>${header.tipoEntrada} contains 'cola'</simple>
                            <to id="_to7" uri="direct:responseCrearUnidad"/>
                        </when>
                        <otherwise id="_otherwise2">
                            <throwException
                                exceptionType="co.com.entelgy.exceptions.ProcedureExcepcion"
                                id="_throwException1" message="${property.descrOut}"/>
                        </otherwise>
                    </choice>
                </otherwise>
            </choice>
        </route>
        <route id="RT-RESPUESTA-CREAR-UNIDAD">
            <from id="_from4" uri="direct:responseCrearUnidad"/>
            <to id="_to6" uri="velocity:template/respuestaCrearUnidad.vm"/>
            <log id="_log2" loggerRef="rh1" message="FINALIZA RUTA (((${body})))"/>
            <removeHeader headerName="moviApliOrig" id="_removeHeader3"/>
            <removeHeader headerName="moviCiasOrig" id="_removeHeader5"/>
            <removeHeader headerName="moviCias" id="_removeHeader13"/>
            <removeHeader headerName="moviOficina" id="_removeHeader8"/>
            <removeHeader headerName="moviNumero" id="_removeHeader2"/>
            <removeHeader headerName="moviFpag" id="_removeHeader9"/>
            <removeHeader headerName="moviDescripcion" id="_removeHeader6"/>
            <removeHeader headerName="moviUsuaCrea" id="_removeHeader10"/>
            <removeHeader headerName="moviFecha" id="_removeHeader4"/>
            <removeHeader headerName="moviValor" id="_removeHeader1"/>
            <stop id="_stop2"/>
        </route>
    </camelContext>
</beans>
